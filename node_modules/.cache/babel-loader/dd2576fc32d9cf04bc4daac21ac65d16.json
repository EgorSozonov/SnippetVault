{"ast":null,"code":"import _objectSpread from\"/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{INIT_STATE}from\"./state\";var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"login\":return state;case\"logout\":return state;case\"changeSelect\":{return _objectSpread(_objectSpread({},state),{},{openSelect:action.payload.selectName});}case\"setLanguage1\":{return _objectSpread(_objectSpread({},state),{},{language1:action.payload.newValue});}case\"setLanguage2\":{return _objectSpread(_objectSpread({},state),{},{language2:action.payload.newValue});}case\"setTaskGroup\":{return _objectSpread(_objectSpread({},state),{},{taskGroup:action.payload.newValue});}}return state;};export default reducer;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/reducer.ts"],"names":["INIT_STATE","reducer","state","action","type","openSelect","payload","selectName","language1","newValue","language2","taskGroup"],"mappings":"mKACA,OAASA,UAAT,KAAoC,SAApC,CAYA,GAAMC,CAAAA,OAAsC,CAAG,QAAzCA,CAAAA,OAAyC,EAA+D,IAA9DC,CAAAA,KAA8D,2DAA7CF,UAA6C,IAAjCG,CAAAA,MAAiC,2CAC1G,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,OAAL,CACI,MAAOF,CAAAA,KAAP,CACJ,IAAK,QAAL,CACI,MAAOA,CAAAA,KAAP,CACJ,IAAK,cAAL,CAAqB,CACjB,sCAAWA,KAAX,MAAkBG,UAAU,CAAEF,MAAM,CAACG,OAAP,CAAeC,UAA7C,GACH,CACD,IAAK,cAAL,CAAqB,CACjB,sCAAWL,KAAX,MAAkBM,SAAS,CAAEL,MAAM,CAACG,OAAP,CAAeG,QAA5C,GACH,CACD,IAAK,cAAL,CAAqB,CACjB,sCAAWP,KAAX,MAAkBQ,SAAS,CAAEP,MAAM,CAACG,OAAP,CAAeG,QAA5C,GACH,CACD,IAAK,cAAL,CAAqB,CACjB,sCAAWP,KAAX,MAAkBS,SAAS,CAAER,MAAM,CAACG,OAAP,CAAeG,QAA5C,GACH,CAhBL,CAkBA,MAAOP,CAAAA,KAAP,CACH,CApBD,CAsBA,cAAeD,CAAAA,OAAf","sourcesContent":["import { Reducer } from \"redux\";\r\nimport { INIT_STATE, SVState } from \"./state\"\r\n\r\n\r\ntype ReduxAction = \r\n    | {type: \"login\", payload: {userName: string, pw: string}}\r\n    | {type: \"logout\", payload: {}}\r\n    | {type: \"changeSelect\", payload: {selectName: string}}\r\n    | {type: \"setLanguage1\", payload: {newValue: string}}\r\n    | {type: \"setLanguage2\", payload: {newValue: string}}\r\n    | {type: \"setTaskGroup\", payload: {newValue: string}}\r\n\r\n\r\nconst reducer: Reducer<SVState, ReduxAction> = (state: SVState = INIT_STATE, action: ReduxAction): SVState => {\r\n    switch(action.type) {\r\n        case \"login\":\r\n            return state;\r\n        case \"logout\":\r\n            return state;\r\n        case \"changeSelect\": {\r\n            return {...state, openSelect: action.payload.selectName, }\r\n        }\r\n        case \"setLanguage1\": {\r\n            return {...state, language1: action.payload.newValue, }\r\n        }\r\n        case \"setLanguage2\": {\r\n            return {...state, language2: action.payload.newValue, }\r\n        }\r\n        case \"setTaskGroup\": {\r\n            return {...state, taskGroup: action.payload.newValue, }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}