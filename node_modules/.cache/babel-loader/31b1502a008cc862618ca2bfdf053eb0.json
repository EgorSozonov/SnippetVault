{"ast":null,"code":"import{useContext,useEffect,useState}from\"react\";import Header from\"./header\";import TextInput from\"./textInput\";import\"./snippet.css\";import SnippetCode from\"./snippetCode\";import createClient from\"../../client\";import{html}from\"htm/react\";import{observer}from\"mobx-react-lite\";import{StoreContext}from\"../../app\";function SnippetPg0(){console.log(\"SnippetPg\");const appState=useContext(StoreContext);const[snippets,setSnippets]=useState([]);const client=createClient();const lang1=appState.app.language1;const lang2=appState.app.language2;const tg=appState.app.taskGroup;useEffect(()=>{client.get(`{ENDPOINTS.get.snippet}${appState.app.language1}/${appState.app.language2}/${appState.app.taskGroup}`).then(r=>{console.log(\"Response\");console.dir(r);if(r.data){setSnippets(r.data);}}).catch(e=>{console.log(\"Error\");console.dir(e);});},[lang1,lang2,tg]);return html`<div class=\"snippetsBody\">\n        <${Header} />\n        <main class=\"snippetsContainer\">\n            <div class=\"snippetsHeader\">\n                <div class=\"snippetLeftHeader\">${lang1}</div>\n                <div class=\"taskForHeader\">${tg}</div>\n                <div class=\"snippetRightHeader\">${lang2}</div>\n            </div>\n            ${snippets&&snippets.map((snippet,idx)=>{const evenClass=idx%2===0?\" evenRow\":\"\";return html`\n                    <div class=\"snippetRow\" key=${idx}>\n                        <div class=${\"snippetContent leftSide\"+evenClass}>\n                            ${snippet.leftCode.length>0?html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`:html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                        <div class=${\"taskContainer\"+evenClass}>\n                            ${snippet.taskName}\n                        </div>\n                        <div class=${\"snippetContent rightSide\"+evenClass}>\n                            ${snippet.rightCode.length>0?html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`:html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                    </div>`;})}\n            <div class=\"snippetFooter\"> </div>\n        </main>\n    </div>\n    `;}const SnippetPg=observer(SnippetPg0);export default SnippetPg;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts"],"names":["useContext","useEffect","useState","Header","TextInput","SnippetCode","createClient","html","observer","StoreContext","SnippetPg0","console","log","appState","snippets","setSnippets","client","lang1","app","language1","lang2","language2","tg","taskGroup","get","then","r","dir","data","catch","e","map","snippet","idx","evenClass","leftCode","length","taskName","rightCode","SnippetPg"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\r\nimport Snippet from \"../../types/snippet\"\r\nimport Header from \"./header\"\r\nimport TextInput from \"./textInput\"\r\nimport \"./snippet.css\"\r\nimport SnippetCode from \"./snippetCode\"\r\nimport createClient from \"../../client\"\r\nimport { AxiosInstance } from \"axios\"\r\nimport { html } from \"htm/react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport AppState from \"../../MobX/AppState\"\r\nimport { StoreContext } from \"../../app\"\r\n\r\n\r\nfunction SnippetPg0() {\r\n    console.log(\"SnippetPg\")\r\n    const appState = useContext(StoreContext)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    const lang1 = appState.app.language1\r\n    const lang2 = appState.app.language2\r\n    const tg = appState.app.taskGroup\r\n\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${appState.app.language1}/${appState.app.language2}/${appState.app.taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, tg])\r\n\r\n\r\n\r\n    return html`<div class=\"snippetsBody\">\r\n        <${Header} />\r\n        <main class=\"snippetsContainer\">\r\n            <div class=\"snippetsHeader\">\r\n                <div class=\"snippetLeftHeader\">${lang1}</div>\r\n                <div class=\"taskForHeader\">${tg}</div>\r\n                <div class=\"snippetRightHeader\">${lang2}</div>\r\n            </div>\r\n            ${snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return html`\r\n                    <div class=\"snippetRow\" key=${idx}>\r\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\r\n                            ${snippet.leftCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                        <div class=${\"taskContainer\" + evenClass}>\r\n                            ${snippet.taskName}\r\n                        </div>\r\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\r\n                            ${snippet.rightCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                    </div>`\r\n            })}\r\n            <div class=\"snippetFooter\"> </div>\r\n        </main>\r\n    </div>\r\n    `\r\n}\r\n\r\nconst SnippetPg = observer(SnippetPg0)\r\nexport default SnippetPg"]},"metadata":{},"sourceType":"module"}