{"ast":null,"code":"import{useEffect,useState}from'react';import{useSelector}from'react-redux';import Header from'./header';import TextInput from\"./textInput\";import'./snippet.css';import SnippetCode from'./snippetCode';import createClient from'../../client';import{html}from'htm/react';function SnippetPg(){console.log(\"SnippetPg\");const lang1=useSelector(state=>state.language1);const lang2=useSelector(state=>state.language2);const taskGroup=useSelector(state=>state.taskGroup);const[snippets,setSnippets]=useState([]);const client=createClient();useEffect(()=>{client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`).then(r=>{console.log(\"Response\");console.dir(r);if(r.data){setSnippets(r.data);}}).catch(e=>{console.log(\"Error\");console.dir(e);});},[lang1,lang2,taskGroup]);return html`<div class=\"snippetsBody\">\n        <${Header} />\n        <main class=\"snippetsContainer\">\n            <div class=\"snippetsHeader\">\n                <div class=\"snippetLeftHeader\">${lang1}</div>\n                <div class=\"taskForHeader\">${taskGroup}</div>\n                <div class=\"snippetRightHeader\">${lang2}</div>\n            </div>\n            ${snippets&&snippets.map((snippet,idx)=>{const evenClass=idx%2===0?\" evenRow\":\"\";return html`\n                    <div class=\"snippetRow\" key=${idx}>\n                        <div class=${\"snippetContent leftSide\"+evenClass}>\n                            ${snippet.leftCode.length>0?html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`:html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                        <div class=${\"taskContainer\"+evenClass}>\n                            ${snippet.taskName}\n                        </div>\n                        <div class=${\"snippetContent rightSide\"+evenClass}>\n                            ${snippet.rightCode.length>0?html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`:html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                    </div>`;})}\n            <div style=\"margin-bottom: 20px; background-color: #303030'\">&nbsp;</div>\n        </main>\n    </div>\n    `;}export default SnippetPg;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts"],"names":["useEffect","useState","useSelector","Header","TextInput","SnippetCode","createClient","html","SnippetPg","console","log","lang1","state","language1","lang2","language2","taskGroup","snippets","setSnippets","client","get","then","r","dir","data","catch","e","map","snippet","idx","evenClass","leftCode","length","taskName","rightCode"],"mappings":"AAAA,OAAgBA,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CAKA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,cAAzB,CAEA,OAASC,IAAT,KAAqB,WAArB,CAGA,QAASC,CAAAA,SAAT,EAAqB,CACjBC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACA,KAAMC,CAAAA,KAAK,CAAGT,WAAW,CAAEU,KAAD,EAAoBA,KAAK,CAACC,SAA3B,CAAzB,CACA,KAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAAEU,KAAD,EAAoBA,KAAK,CAACG,SAA3B,CAAzB,CACA,KAAMC,CAAAA,SAAS,CAAGd,WAAW,CAAEU,KAAD,EAAoBA,KAAK,CAACI,SAA3B,CAA7B,CACA,KAAM,CAACC,QAAD,CAAWC,WAAX,EAA0BjB,QAAQ,CAAY,EAAZ,CAAxC,CACA,KAAMkB,CAAAA,MAAqB,CAAGb,YAAY,EAA1C,CACAN,SAAS,CAAC,IAAM,CACZmB,MAAM,CAACC,GAAP,CAAY,0BAAyBT,KAAM,IAAGG,KAAM,IAAGE,SAAU,EAAjE,EACCK,IADD,CACOC,CAAD,EAAY,CACdb,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAD,OAAO,CAACc,GAAR,CAAYD,CAAZ,EACA,GAAIA,CAAC,CAACE,IAAN,CAAY,CACRN,WAAW,CAACI,CAAC,CAACE,IAAH,CAAX,CACH,CACJ,CAPD,EAOGC,KAPH,CAOUC,CAAD,EAAY,CACjBjB,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAD,OAAO,CAACc,GAAR,CAAYG,CAAZ,EACH,CAVD,EAWH,CAZQ,CAYN,CAACf,KAAD,CAAQG,KAAR,CAAeE,SAAf,CAZM,CAAT,CAgBA,MAAOT,CAAAA,IAAK;AAChB,WAAWJ,MAAO;AAClB;AACA;AACA,iDAAiDQ,KAAM;AACvD,6CAA6CK,SAAU;AACvD,kDAAkDF,KAAM;AACxD;AACA,cAAcG,QAAQ,EAAIA,QAAQ,CAACU,GAAT,CAAa,CAACC,OAAD,CAAmBC,GAAnB,GAAoC,CAC3D,KAAMC,CAAAA,SAAS,CAAID,GAAG,CAAC,CAAJ,GAAU,CAAV,CAAc,UAAd,CAA2B,EAA9C,CACA,MAAOtB,CAAAA,IAAK;AAC5B,kDAAkDsB,GAAI;AACtD,qCAAqC,0BAA4BC,SAAU;AAC3E,8BAA8BF,OAAO,CAACG,QAAR,CAAiBC,MAAjB,CAA0B,CAA1B,CACIzB,IAAK,IAAGF,WAAY,YAAWuB,OAAO,CAACG,QAAS,uBADpD,CAEIxB,IAAK,IAAGH,SAAU,2BAA2B;AAC/E;AACA,qCAAqC,gBAAkB0B,SAAU;AACjE,8BAA8BF,OAAO,CAACK,QAAS;AAC/C;AACA,qCAAqC,2BAA6BH,SAAU;AAC5E,8BAA8BF,OAAO,CAACM,SAAR,CAAkBF,MAAlB,CAA2B,CAA3B,CACIzB,IAAK,IAAGF,WAAY,YAAWuB,OAAO,CAACM,SAAU,sBADrD,CAEI3B,IAAK,IAAGH,SAAU,2BAA2B;AAC/E;AACA,2BAfgB,CAgBH,CAlBa,CAkBX;AACf;AACA;AACA;AACA,KA9BI,CA+BH,CAED,cAAeI,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport { SVState } from '../../redux/state';\r\nimport Snippet from '../../types/snippet';\r\nimport Header from './header'\r\nimport TextInput from \"./textInput\"\r\nimport './snippet.css'\r\nimport SnippetCode from './snippetCode';\r\nimport ENDPOINTS from '../../url';\r\nimport createClient from '../../client';\r\nimport { AxiosInstance } from 'axios';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nfunction SnippetPg() {\r\n    console.log(\"SnippetPg\")\r\n    const lang1 = useSelector((state: SVState) => state.language1)\r\n    const lang2 = useSelector((state: SVState) => state.language2)\r\n    const taskGroup = useSelector((state: SVState) => state.taskGroup)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, taskGroup])\r\n\r\n\r\n\r\n    return html`<div class=\"snippetsBody\">\r\n        <${Header} />\r\n        <main class=\"snippetsContainer\">\r\n            <div class=\"snippetsHeader\">\r\n                <div class=\"snippetLeftHeader\">${lang1}</div>\r\n                <div class=\"taskForHeader\">${taskGroup}</div>\r\n                <div class=\"snippetRightHeader\">${lang2}</div>\r\n            </div>\r\n            ${snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return html`\r\n                    <div class=\"snippetRow\" key=${idx}>\r\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\r\n                            ${snippet.leftCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                        <div class=${\"taskContainer\" + evenClass}>\r\n                            ${snippet.taskName}\r\n                        </div>\r\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\r\n                            ${snippet.rightCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                    </div>`\r\n            })}\r\n            <div style=\"margin-bottom: 20px; background-color: #303030'\">&nbsp;</div>\r\n        </main>\r\n    </div>\r\n    `\r\n}\r\n\r\nexport default SnippetPg"]},"metadata":{},"sourceType":"module"}