{"ast":null,"code":"var _jsxFileName = \"/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./hoverSelect.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HoverSelect = ({\n  choices,\n  uniqueName,\n  selectCallback\n}) => {\n  _s();\n\n  const [currValue, setCurrValue] = useState(\" \");\n  const currentlyOpen = useSelector(state => state.openSelect);\n  const dispatch = useDispatch();\n  const isOpen = currentlyOpen === uniqueName;\n\n  const onSelect = c => {\n    setCurrValue(c);\n    selectCallback(c);\n    dispatch({\n      type: \"changeSelect\",\n      payload: {\n        selectName: \"\"\n      }\n    });\n  };\n\n  const onClickHeader = () => {\n    if (isOpen) {\n      dispatch({\n        type: \"changeSelect\",\n        payload: {\n          selectName: \"\"\n        }\n      });\n    } else {\n      dispatch({\n        type: \"changeSelect\",\n        payload: {\n          selectName: uniqueName\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hoverSelect\",\n    onMouseEnter: () => dispatch({\n      type: \"changeSelect\",\n      payload: {\n        selectName: uniqueName\n      }\n    }),\n    onMouseLeave: () => dispatch({\n      type: \"changeSelect\",\n      payload: {\n        selectName: \"\"\n      }\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"search\",\n      onClick: onClickHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"leftButton\" + (isOpen ? \" hoverSelectActive\" : \" hoverSelectInactive\"),\n        children: \"(-)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rightLabel\",\n        children: currValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"optgroup\",\n            children: choices.map((c, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => onSelect(c),\n                children: c\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HoverSelect, \"p0g6I7PyNCPSEPaexr+9kdWnQDE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = HoverSelect;\nexport default HoverSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"HoverSelect\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.tsx"],"names":["useState","useDispatch","useSelector","HoverSelect","choices","uniqueName","selectCallback","currValue","setCurrValue","currentlyOpen","state","openSelect","dispatch","isOpen","onSelect","c","type","payload","selectName","onClickHeader","map","idx"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { SVState } from \"../../redux/state\"\r\nimport \"./hoverSelect.css\"\r\n\r\n\r\ntype Props = {\r\n    choices: string[],\r\n    uniqueName: string,\r\n    selectCallback: (c: string) => void,\r\n}\r\n\r\nconst HoverSelect: React.FunctionComponent<Props> = ({choices, uniqueName, selectCallback, }) => {\r\n    const [currValue, setCurrValue] = useState(\" \")\r\n    const currentlyOpen = useSelector((state: SVState) => state.openSelect)\r\n    const dispatch = useDispatch()\r\n    const isOpen = currentlyOpen === uniqueName\r\n\r\n    const onSelect = (c: string) => {\r\n        setCurrValue(c)\r\n        selectCallback(c)\r\n        dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})\r\n    }\r\n\r\n    const onClickHeader = () => {\r\n        if (isOpen) {\r\n            dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})\r\n        } else {\r\n            dispatch({type: \"changeSelect\", payload: {selectName: uniqueName, }})\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"hoverSelect\" onMouseEnter={() => dispatch({type: \"changeSelect\", payload: {selectName: uniqueName, }})}\r\n                onMouseLeave={() => dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})}>            \r\n            <span className=\"search\" onClick={onClickHeader}>\r\n                <span className={\"leftButton\" + (isOpen ? \" hoverSelectActive\" : \" hoverSelectInactive\")}>(-)</span>\r\n                <span className={\"rightLabel\"}>{currValue}</span>\r\n            </span>\r\n            {isOpen && \r\n                <div className=\"menu\">\r\n                    <ul className=\"list\">\r\n                        <li>\r\n                            <ul className=\"optgroup\">\r\n                                {choices.map((c: string, idx: number) => {\r\n                                    return (<li key={idx} onClick={() => onSelect(c)}>{c}</li>)\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HoverSelect"]},"metadata":{},"sourceType":"module"}