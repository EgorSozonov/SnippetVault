{"ast":null,"code":"import { NavLink } from 'react-router-dom';\nimport EditableList from '../../commonComponents/editableList/editableList';\nimport PATHS from '../../path';\nimport Alternative from './alternative';\nimport NewProposal from './newProposal';\nimport { html } from 'htm/react';\nconst groups = [{\n  id: 1,\n  name: \"String manipulation\"\n}, {\n  id: 2,\n  name: \"File system tasks\"\n}, {\n  id: 3,\n  name: \"Common types & operations on them\"\n}];\nconst langs = [{\n  id: 1,\n  name: \"C#\",\n  languageGroup: \"Universal\"\n}, {\n  id: 2,\n  name: \"C++\",\n  languageGroup: \"Universal\"\n}, {\n  id: 3,\n  name: \"Typescript\",\n  languageGroup: \"Universal\"\n}];\n\nconst ListTaskGroups = props => EditableList(props);\n\n_c = ListTaskGroups;\n\nconst ListLanguages = props => EditableList(props);\n\n_c2 = ListLanguages;\n\nfunction Admin() {\n  return html`\n        <div style=\"overflow: scroll; backgroundColor: #303030;\">\n            <p>\n                <${NavLink} to=${PATHS[\"snippet\"].url}>\n                    <div class=\"adminHeader\">Back to snippets</div>\n                <//>\n            </p>\n            <${ListTaskGroups} values=${groups} title=\"Task groups\"></EditableList>\n            <${ListLanguages} values=${langs} title=\"Languages\"></EditableList>\n            <div>\n                <${Alternative} />\n            </div>\n            <div>\n                <${NewProposal} />\n            </div>\n            \n            \n\n        </div>\n    `;\n}\n\n_c3 = Admin;\nexport default Admin;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListTaskGroups\");\n$RefreshReg$(_c2, \"ListLanguages\");\n$RefreshReg$(_c3, \"Admin\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/admin.ts"],"names":["NavLink","EditableList","PATHS","Alternative","NewProposal","html","groups","id","name","langs","languageGroup","ListTaskGroups","props","ListLanguages","Admin","url"],"mappings":"AACA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,QAAqB,WAArB;AAGA,MAAMC,MAAmB,GAAG,CACxB;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE;AAAd,CADwB,EAExB;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE;AAAd,CAFwB,EAGxB;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE;AAAd,CAHwB,CAA5B;AAMA,MAAMC,KAAiB,GAAG,CACtB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,IAAd;AAAoBE,EAAAA,aAAa,EAAE;AAAnC,CADsB,EAEtB;AAACH,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,KAAd;AAAqBE,EAAAA,aAAa,EAAE;AAApC,CAFsB,EAGtB;AAACH,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,YAAd;AAA4BE,EAAAA,aAAa,EAAE;AAA3C,CAHsB,CAA1B;;AAKA,MAAMC,cAAc,GAAIC,KAAD,IAAgBX,YAAY,CAAYW,KAAZ,CAAnD;;KAAMD,c;;AACN,MAAME,aAAa,GAAID,KAAD,IAAgBX,YAAY,CAAWW,KAAX,CAAlD;;MAAMC,a;;AAEN,SAASC,KAAT,GAAiB;AACb,SAAOT,IAAK;AAChB;AACA;AACA,mBAAmBL,OAAQ,OAAME,KAAK,CAAC,SAAD,CAAL,CAAiBa,GAAI;AACtD;AACA;AACA;AACA,eAAeJ,cAAe,WAAUL,MAAO;AAC/C,eAAeO,aAAc,WAAUJ,KAAM;AAC7C;AACA,mBAAmBN,WAAY;AAC/B;AACA;AACA,mBAAmBC,WAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,KAnBI;AAoBH;;MArBQU,K;AAuBT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport EditableList from '../../commonComponents/editableList/editableList';\r\nimport PATHS from '../../path';\r\nimport Language from '../../types/language';\r\nimport TaskGroup from '../../types/taskGroup';\r\nimport Alternative from './alternative';\r\nimport NewProposal from './newProposal';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst groups: TaskGroup[] = [\r\n    {id: 1, name: \"String manipulation\"},\r\n    {id: 2, name: \"File system tasks\"},\r\n    {id: 3, name: \"Common types & operations on them\"},\r\n]\r\n\r\nconst langs: Language[] = [\r\n    {id: 1, name: \"C#\", languageGroup: \"Universal\", },\r\n    {id: 2, name: \"C++\", languageGroup: \"Universal\", },\r\n    {id: 3, name: \"Typescript\", languageGroup: \"Universal\", },\r\n]\r\nconst ListTaskGroups = (props: any) => EditableList<TaskGroup>(props)\r\nconst ListLanguages = (props: any) => EditableList<Language>(props)\r\n\r\nfunction Admin() {\r\n    return html`\r\n        <div style=\"overflow: scroll; backgroundColor: #303030;\">\r\n            <p>\r\n                <${NavLink} to=${PATHS[\"snippet\"].url}>\r\n                    <div class=\"adminHeader\">Back to snippets</div>\r\n                <//>\r\n            </p>\r\n            <${ListTaskGroups} values=${groups} title=\"Task groups\"></EditableList>\r\n            <${ListLanguages} values=${langs} title=\"Languages\"></EditableList>\r\n            <div>\r\n                <${Alternative} />\r\n            </div>\r\n            <div>\r\n                <${NewProposal} />\r\n            </div>\r\n            \r\n            \r\n\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}