{"ast":null,"code":"var _jsxFileName = \"/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from './header';\nimport TextInput from \"./textInput\";\nimport './snippet.css';\nimport SnippetCode from './snippetCode';\nimport createClient from '../../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SnippetPg() {\n  _s();\n\n  const lang1 = useSelector(state => state.language1);\n  const lang2 = useSelector(state => state.language2);\n  const taskGroup = useSelector(state => state.taskGroup);\n  const [snippets, setSnippets] = useState([]);\n  const client = createClient();\n  useEffect(() => {\n    client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`).then(r => {\n      console.log(\"Response\");\n      console.dir(r);\n\n      if (r.data) {\n        setSnippets(r.data);\n      }\n    }).catch(e => {\n      console.log(\"Error\");\n      console.dir(e);\n    });\n  }, [lang1, lang2, taskGroup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snippetsBody\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"snippetsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snippetsHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snippetLeftHeader\",\n          children: lang1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskForHeader\",\n          children: taskGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snippetRightHeader\",\n          children: lang2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), snippets && snippets.map((snippet, idx) => {\n        const evenClass = idx % 2 === 0 ? \" evenRow\" : \"\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snippetRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snippetContent leftSide\" + evenClass,\n            children: snippet.leftCode.length > 0 ? /*#__PURE__*/_jsxDEV(SnippetCode, {\n              content: snippet.leftCode,\n              isRight: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(TextInput, {\n              numberProposals: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskContainer\" + evenClass,\n            children: snippet.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snippetContent rightSide\" + evenClass,\n            children: snippet.rightCode.length > 0 ? /*#__PURE__*/_jsxDEV(SnippetCode, {\n              content: snippet.rightCode,\n              isRight: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(TextInput, {\n              numberProposals: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px;\",\n          backgroundColor: \"#303030\"\n        },\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SnippetPg, \"+Hw5HxXsMislaGHPPdPaZ3UZdm4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = SnippetPg;\nexport default SnippetPg;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnippetPg\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.tsx"],"names":["React","useEffect","useState","useSelector","Header","TextInput","SnippetCode","createClient","SnippetPg","lang1","state","language1","lang2","language2","taskGroup","snippets","setSnippets","client","get","then","r","console","log","dir","data","catch","e","map","snippet","idx","evenClass","leftCode","length","taskName","rightCode","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport { SVState } from '../../redux/state';\r\nimport Snippet from '../../types/snippet';\r\nimport Header from './header'\r\nimport TextInput from \"./textInput\"\r\nimport './snippet.css'\r\nimport SnippetCode from './snippetCode';\r\nimport ENDPOINTS from '../../url';\r\nimport createClient from '../../client';\r\nimport { AxiosInstance } from 'axios';\r\n\r\n\r\nfunction SnippetPg() {\r\n    const lang1 = useSelector((state: SVState) => state.language1)\r\n    const lang2 = useSelector((state: SVState) => state.language2)\r\n    const taskGroup = useSelector((state: SVState) => state.taskGroup)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, taskGroup])\r\n\r\n\r\n\r\n    return (<div className=\"snippetsBody\">\r\n        <Header></Header>\r\n        <main className=\"snippetsContainer\">\r\n            <div className=\"snippetsHeader\">\r\n                <div className=\"snippetLeftHeader\">{lang1}</div>\r\n                    <div className=\"taskForHeader\">{taskGroup}</div>\r\n                    <div className=\"snippetRightHeader\">{lang2}</div>\r\n            </div>\r\n            {snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return (<div className=\"snippetRow\" key={idx}>\r\n                    <div className={\"snippetContent leftSide\" + evenClass}>\r\n                        {snippet.leftCode.length > 0 \r\n                            ? <SnippetCode content={snippet.leftCode} isRight={false}></SnippetCode>\r\n                            : <TextInput numberProposals={4}></TextInput>}\r\n                    </div>\r\n                    <div className={\"taskContainer\" + evenClass}>\r\n                        {snippet.taskName}\r\n                    </div>\r\n                    <div className={\"snippetContent rightSide\" + evenClass}>\r\n                        {snippet.rightCode.length > 0 \r\n                            ? <SnippetCode content={snippet.rightCode} isRight={true}></SnippetCode>\r\n                            : <TextInput numberProposals={4}></TextInput>}\r\n                    </div>\r\n                </div>)\r\n            })}\r\n            <div style={{marginBottom: \"20px;\", backgroundColor: \"#303030\",  }}>&nbsp;</div>\r\n        </main>\r\n    </div>)\r\n}\r\n\r\nexport default SnippetPg"]},"metadata":{},"sourceType":"module"}