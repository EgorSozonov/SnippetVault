{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useDispatch}from'react-redux';import HoverSelect from'../../commonComponents/hoverSelect/hoverSelect';import'./snippet.css';import{html}from'htm/react';var Header=function Header(){var dispatch=useDispatch();var callback1=function callback1(c){dispatch({type:\"setLanguage1\",payload:{newValue:c}});};var callback2=function callback2(c){dispatch({type:\"setLanguage2\",payload:{newValue:c}});};var callbackTaskGroup=function callbackTaskGroup(c){dispatch({type:\"setTaskGroup\",payload:{newValue:c}});};return html(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n        <nav>\\n            <div class=\\\"headerContainer\\\">\\n                <div class=\\\"choiceInput headerLeftmost\\\">\\n                    <div style=\\\"height: 2rem; margin: 0; padding: 0;\\\"><label >Task group:</label></div>\\n                    <\",\" choices=\",\" uniqueName=\\\"TaskGroupChoice\\\"\\n                        selectCallback=\",\"><//>\\n                </div>\\n                <div class=\\\"choiceInput\\\">\\n                    <div style=\\\"height: 2rem; margin: 0; padding: 0;\\\"><label >Language 1:</label></div>\\n                    <\",\" choices=\",\" uniqueName=\\\"Lang1\\\"\\n                        selectCallback=\",\"><//>\\n                </div>\\n                <div class=\\\"choiceInput\\\">\\n                    <div style=\\\"height: 2rem; margin: 0; padding: 0;\\\"><label >Language 2:</label></div>\\n                    <\",\" choices=\",\" uniqueName=\\\"Lang2\\\" \\n                        selectCallback=\",\"><//>\\n                    \\n                </div>\\n                <div class=\\\"choiceInputButton\\\">\\n                    \\u21A9 Previous\\n                </div>\\n                <div class=\\\"choiceInputButton headerRightmost\\\">\\n                    \\u21AA Next\\n                </div>\\n            </div>\\n        </nav>\\n        \"])),HoverSelect,[\"strings\",\"file system\",\"spreadsheets\"],callbackTaskGroup,HoverSelect,[\"C#\",\"Swift\",\"Typescript\"],callback1,HoverSelect,[\"C#\",\"Typescript\"],callback2);};export default Header;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/header.ts"],"names":["useDispatch","HoverSelect","html","Header","dispatch","callback1","c","type","payload","newValue","callback2","callbackTaskGroup"],"mappings":"wMACA,OAASA,WAAT,KAAyC,aAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CACA,MAAO,eAAP,CACA,OAASC,IAAT,KAAqB,WAArB,CAGA,GAAMC,CAAAA,MAA+B,CAAG,QAAlCA,CAAAA,MAAkC,EAAM,CAC1C,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAe,CAC7BF,QAAQ,CAAC,CAACG,IAAI,CAAE,cAAP,CAAuBC,OAAO,CAAE,CAACC,QAAQ,CAAEH,CAAX,CAAhC,CAAD,CAAR,CACH,CAFD,CAIA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACJ,CAAD,CAAe,CAC7BF,QAAQ,CAAC,CAACG,IAAI,CAAE,cAAP,CAAuBC,OAAO,CAAE,CAACC,QAAQ,CAAEH,CAAX,CAAhC,CAAD,CAAR,CACH,CAFD,CAIA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACL,CAAD,CAAe,CACrCF,QAAQ,CAAC,CAACG,IAAI,CAAE,cAAP,CAAuBC,OAAO,CAAE,CAACC,QAAQ,CAAEH,CAAX,CAAhC,CAAD,CAAR,CACH,CAFD,CAIA,MAAQJ,CAAAA,IAAR,2xCAKmBD,WALnB,CAK0C,CAAC,SAAD,CAAY,aAAZ,CAA2B,cAA3B,CAL1C,CAMqCU,iBANrC,CAUmBV,WAVnB,CAU0C,CAAC,IAAD,CAAO,OAAP,CAAgB,YAAhB,CAV1C,CAWqCI,SAXrC,CAemBJ,WAfnB,CAe0C,CAAC,IAAD,CAAO,YAAP,CAf1C,CAgBqCS,SAhBrC,EA6BH,CA3CD,CA6CA,cAAeP,CAAAA,MAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect'\r\nimport './snippet.css'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const callback1 = (c: string) => {\r\n        dispatch({type: \"setLanguage1\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callback2 = (c: string) => {\r\n        dispatch({type: \"setLanguage2\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callbackTaskGroup = (c: string) => {\r\n        dispatch({type: \"setTaskGroup\", payload: {newValue: c}})\r\n    }\r\n\r\n    return (html `\r\n        <nav>\r\n            <div class=\"headerContainer\">\r\n                <div class=\"choiceInput headerLeftmost\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\r\n                    <${HoverSelect} choices=${[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\r\n                        selectCallback=${callbackTaskGroup}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\r\n                        selectCallback=${callback1}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \r\n                        selectCallback=${callback2}><//>\r\n                    \r\n                </div>\r\n                <div class=\"choiceInputButton\">\r\n                    ↩ Previous\r\n                </div>\r\n                <div class=\"choiceInputButton headerRightmost\">\r\n                    ↪ Next\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        `\r\n      );\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}