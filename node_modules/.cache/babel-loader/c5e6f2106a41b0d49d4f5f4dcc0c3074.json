{"ast":null,"code":"import{action,makeAutoObservable}from'mobx';export default class AppState{language1=\"\";language2=\"\";taskGroup=\"\";openSelect=\"\";constructor(rootStore){this.mainState=rootStore;makeAutoObservable(this);}getName=action(name=>{});}","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/MobX/AppState.ts"],"names":["action","makeAutoObservable","AppState","language1","language2","taskGroup","openSelect","constructor","rootStore","mainState","getName","name"],"mappings":"AAAA,OAAqBA,MAArB,CAA6BC,kBAA7B,KAAuD,MAAvD,CAIA,cAAe,MAAMC,CAAAA,QAAS,CAG1BC,SAAS,CAAG,EAAH,CACTC,SAAS,CAAG,EAAH,CACTC,SAAS,CAAG,EAAH,CACTC,UAAU,CAAG,EAAH,CAEVC,WAAW,CAACC,SAAD,CAAuB,CAC9B,KAAKC,SAAL,CAAiBD,SAAjB,CACAP,kBAAkB,CAAC,IAAD,CAAlB,CACH,CAEDS,OAAO,CAAGV,MAAM,CAAEW,IAAD,EAAwB,CAExC,CAFe,CAAT,CAbmB","sourcesContent":["import { observable, action, makeAutoObservable } from 'mobx'\nimport MainState from \"./MainState\"\n\n\nexport default class AppState {\n    private mainState: MainState;\n\n    language1 = \"\";\n    language2 = \"\";\n    taskGroup = \"\";\n    openSelect = \"\";\n\n    constructor(rootStore: MainState) {\n        this.mainState = rootStore;\n        makeAutoObservable(this)\n    }\n\n    getName = action((name: string): void => {\n\n    })\n}"]},"metadata":{},"sourceType":"module"}