{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect';\nimport './snippet.css';\nimport { html } from 'htm/react';\n\nconst Header = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const callback1 = c => {\n    dispatch({\n      type: \"setLanguage1\",\n      payload: {\n        newValue: c\n      }\n    });\n  };\n\n  const callback2 = c => {\n    dispatch({\n      type: \"setLanguage2\",\n      payload: {\n        newValue: c\n      }\n    });\n  };\n\n  const callbackTaskGroup = c => {\n    dispatch({\n      type: \"setTaskGroup\",\n      payload: {\n        newValue: c\n      }\n    });\n  };\n\n  return html`\n        <nav>\n            <div class=\"headerContainer\">\n                <div class=\"choiceInput headerLeftmost\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\n                    <${HoverSelect} choices=${[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\n                        selectCallback=${callbackTaskGroup}><//>\n                </div>\n                <div class=\"choiceInput\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\n                    <${HoverSelect} choices=${[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\n                        selectCallback=${callback1}><//>\n                </div>\n                <div class=\"choiceInput\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\n                    <${HoverSelect} choices=${[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \n                        selectCallback=${callback2}><//>\n                    \n                </div>\n                <div class=\"choiceInputButton\">\n                    ↩ Previous\n                </div>\n                <div class=\"choiceInputButton headerRightmost\">\n                    ↪ Next\n                </div>\n            </div>\n        </nav>\n        `;\n};\n\n_s(Header, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/header.ts"],"names":["useDispatch","HoverSelect","html","Header","dispatch","callback1","c","type","payload","newValue","callback2","callbackTaskGroup"],"mappings":";;AACA,SAASA,WAAT,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAO,eAAP;AACA,SAASC,IAAT,QAAqB,WAArB;;AAGA,MAAMC,MAA+B,GAAG,MAAM;AAAA;;AAC1C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,SAAS,GAAIC,CAAD,IAAe;AAC7BF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEH;AAAX;AAAhC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMI,SAAS,GAAIJ,CAAD,IAAe;AAC7BF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEH;AAAX;AAAhC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMK,iBAAiB,GAAIL,CAAD,IAAe;AACrCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEH;AAAX;AAAhC,KAAD,CAAR;AACH,GAFD;;AAIA,SAAQJ,IAAM;AAClB;AACA;AACA;AACA;AACA,uBAAuBD,WAAY,YAAW,CAAC,SAAD,EAAY,aAAZ,EAA2B,cAA3B,CAA2C;AACzF,yCAAyCU,iBAAkB;AAC3D;AACA;AACA;AACA,uBAAuBV,WAAY,YAAW,CAAC,IAAD,EAAO,OAAP,EAAgB,YAAhB,CAA8B;AAC5E,yCAAyCI,SAAU;AACnD;AACA;AACA;AACA,uBAAuBJ,WAAY,YAAW,CAAC,IAAD,EAAO,YAAP,CAAqB;AACnE,yCAAyCS,SAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA3BI;AA6BH,CA3CD;;GAAMP,M;UACeH,W;;;KADfG,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect'\r\nimport './snippet.css'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const callback1 = (c: string) => {\r\n        dispatch({type: \"setLanguage1\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callback2 = (c: string) => {\r\n        dispatch({type: \"setLanguage2\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callbackTaskGroup = (c: string) => {\r\n        dispatch({type: \"setTaskGroup\", payload: {newValue: c}})\r\n    }\r\n\r\n    return (html `\r\n        <nav>\r\n            <div class=\"headerContainer\">\r\n                <div class=\"choiceInput headerLeftmost\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\r\n                    <${HoverSelect} choices=${[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\r\n                        selectCallback=${callbackTaskGroup}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\r\n                        selectCallback=${callback1}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \r\n                        selectCallback=${callback2}><//>\r\n                    \r\n                </div>\r\n                <div class=\"choiceInputButton\">\r\n                    ↩ Previous\r\n                </div>\r\n                <div class=\"choiceInputButton headerRightmost\">\r\n                    ↪ Next\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        `\r\n      );\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}