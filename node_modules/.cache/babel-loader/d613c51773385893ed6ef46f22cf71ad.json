{"ast":null,"code":"var _jsxFileName = \"/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/editableList/editableList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./editableList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableList = ({\n  values,\n  title\n}) => {\n  _s();\n\n  const [openIdx, setOpenIdx] = useState(-1);\n\n  const rowClickHandler = idx => {\n    if (idx === openIdx) {\n      setOpenIdx(-1);\n    } else {\n      setOpenIdx(idx);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editableListContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editableListHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editableListTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editableListHeaderButton\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: values.map((v, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"editableListRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => rowClickHandler(idx),\n            className: openIdx === idx ? \" editableListRowActive\" : \"\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editableListCell\",\n              children: v.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), openIdx === idx && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.keys(v).map((k, idxKey) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"editableListEdit\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    defaultValue: v[k],\n                    onFocus: event => event.target.select()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 45\n                }, this)]\n              }, idxKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditableList, \"xaA+Z+MpxyOyUK2QazoPumINpTk=\");\n\n_c = EditableList;\nexport default EditableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableList\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/editableList/editableList.tsx"],"names":["useState","EditableList","values","title","openIdx","setOpenIdx","rowClickHandler","idx","map","v","name","Object","keys","k","idxKey","event","target","select"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,OAAO,oBAAP;;;AAQA,MAAMC,YAAY,GAAG,CAAkC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAlC,KAAkE;AAAA;;AACnF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAC,CAAF,CAAtC;;AACA,QAAMM,eAAe,GAAIC,GAAD,IAAiB;AACrC,QAAIA,GAAG,KAAKH,OAAZ,EAAqB;AACjBC,MAAAA,UAAU,CAAC,CAAC,CAAF,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAACE,GAAD,CAAV;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BAAmC;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gBACKD,MAAM,CAACM,GAAP,CAAW,CAACC,CAAD,EAAOF,GAAP,KAAuB;AAC/B,4BACA;AAAc,UAAA,SAAS,EAAC,iBAAxB;AAAA,kCACI;AAAK,YAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,GAAD,CAAnC;AAA0C,YAAA,SAAS,EAAGH,OAAO,KAAKG,GAAZ,GAAkB,wBAAlB,GAA6C,EAAnG;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAA,wBAAoCE,CAAC,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKN,OAAO,KAAKG,GAAZ,iBACG;AAAA,sBACKI,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeD,GAAf,CAAmB,CAACK,CAAD,EAAYC,MAAZ,KAA+B;AAC/C,kCACI;AAAiB,gBAAA,SAAS,EAAC,kBAA3B;AAAA,wCACI;AAAA,yCAAM;AAAA,8BAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,yCAAM;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,YAAY,EAAEJ,CAAC,CAACI,CAAD,CAAlC;AAAuC,oBAAA,OAAO,EAAGE,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,MAAb;AAA3D;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAII;AAAA,yCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA,iBAASH,MAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAQH,aATA;AADL;AAAA;AAAA;AAAA;AAAA,kBALR;AAAA,WAASP,GAAT;AAAA;AAAA;AAAA;AAAA,gBADA;AAoBH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA3CD;;GAAMN,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\"\r\nimport HasName from \"../../interfaces/hasName\"\r\nimport StringKeyed from \"../../interfaces/stringKeyed\"\r\nimport \"./editableList.css\"\r\n\r\n\r\ntype Props<T extends StringKeyed & HasName> = {\r\n    values: T[],\r\n    title: string,\r\n}\r\n\r\nconst EditableList = <T extends StringKeyed & HasName>({values, title, }: Props<T>) => {\r\n    const [openIdx, setOpenIdx] = useState(-1)\r\n    const rowClickHandler = (idx: number) => {\r\n        if (idx === openIdx) {\r\n            setOpenIdx(-1)\r\n        } else {\r\n            setOpenIdx(idx)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"editableListContainer\">\r\n            <div className=\"editableListHeader\">\r\n                <div className=\"editableListTitle\"><h5>{title}</h5></div>\r\n                <div className=\"editableListHeaderButton\">+</div>\r\n            </div>\r\n            \r\n            <ul>\r\n                {values.map((v: T, idx: number) => {\r\n                    return (\r\n                    <li key={idx} className=\"editableListRow\">\r\n                        <div onClick={() => rowClickHandler(idx)} className={(openIdx === idx ? \" editableListRowActive\" : \"\")}>\r\n                            <span className=\"editableListCell\">{v.name}</span>\r\n                        </div>\r\n                        {openIdx === idx &&\r\n                            <ul>\r\n                                {Object.keys(v).map((k: string, idxKey: number) => {\r\n                                    return (\r\n                                        <li key={idxKey} className=\"editableListEdit\">\r\n                                            <span><label>{k}</label></span>\r\n                                            <span><input type=\"text\" defaultValue={v[k]} onFocus={(event) => event.target.select()} />\r\n                                            </span>\r\n                                            <span><button>Save</button></span>\r\n                                        \r\n                                        </li>)\r\n                                })}\r\n                            </ul>\r\n                        }\r\n                    </li>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditableList"]},"metadata":{},"sourceType":"module"}