{"ast":null,"code":"import _slicedToArray from\"/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import\"./editableList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditableList=function EditableList(_ref){var values=_ref.values,title=_ref.title;var _useState=useState(-1),_useState2=_slicedToArray(_useState,2),openIdx=_useState2[0],setOpenIdx=_useState2[1];var rowClickHandler=function rowClickHandler(idx){if(idx===openIdx){setOpenIdx(-1);}else{setOpenIdx(idx);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"editableListContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editableListHeader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"editableListTitle\",children:/*#__PURE__*/_jsx(\"h5\",{children:title})}),/*#__PURE__*/_jsx(\"div\",{className:\"editableListHeaderButton\",children:\"+\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:values.map(function(v,idx){return/*#__PURE__*/_jsxs(\"li\",{className:\"editableListRow\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return rowClickHandler(idx);},className:openIdx===idx?\" editableListRowActive\":\"\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editableListCell\",children:v.name})}),openIdx===idx&&/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(v).map(function(k,idxKey){return/*#__PURE__*/_jsxs(\"li\",{className:\"editableListEdit\",children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"label\",{children:k})}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:v[k],onFocus:function onFocus(event){return event.target.select();}})}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Save\"})})]},idxKey);})})]},idx);})})]});};export default EditableList;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.tsx"],"names":["useState","EditableList","values","title","openIdx","setOpenIdx","rowClickHandler","idx","map","v","name","Object","keys","k","idxKey","event","target","select"],"mappings":"oKAAA,OAASA,QAAT,KAAyB,OAAzB,CAGA,MAAO,oBAAP,C,wFAQA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkE,IAA/BC,CAAAA,MAA+B,MAA/BA,MAA+B,CAAvBC,KAAuB,MAAvBA,KAAuB,CACnF,cAA8BH,QAAQ,CAAC,CAAC,CAAF,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAiB,CACrC,GAAIA,GAAG,GAAKH,OAAZ,CAAqB,CACjBC,UAAU,CAAC,CAAC,CAAF,CAAV,CACH,CAFD,IAEO,CACHA,UAAU,CAACE,GAAD,CAAV,CACH,CACJ,CAND,CAQA,mBACI,aAAK,SAAS,CAAC,uBAAf,wBACI,aAAK,SAAS,CAAC,oBAAf,wBACI,YAAK,SAAS,CAAC,mBAAf,uBAAmC,oBAAKJ,KAAL,EAAnC,EADJ,cAEI,YAAK,SAAS,CAAC,0BAAf,eAFJ,GADJ,cAMI,oBACKD,MAAM,CAACM,GAAP,CAAW,SAACC,CAAD,CAAOF,GAAP,CAAuB,CAC/B,mBACA,YAAc,SAAS,CAAC,iBAAxB,wBACI,YAAK,OAAO,CAAE,yBAAMD,CAAAA,eAAe,CAACC,GAAD,CAArB,EAAd,CAA0C,SAAS,CAAGH,OAAO,GAAKG,GAAZ,CAAkB,wBAAlB,CAA6C,EAAnG,uBACI,aAAM,SAAS,CAAC,kBAAhB,UAAoCE,CAAC,CAACC,IAAtC,EADJ,EADJ,CAIKN,OAAO,GAAKG,GAAZ,eACG,oBACKI,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeD,GAAf,CAAmB,SAACK,CAAD,CAAYC,MAAZ,CAA+B,CAC/C,mBACI,YAAiB,SAAS,CAAC,kBAA3B,wBACI,mCAAM,uBAAQD,CAAR,EAAN,EADJ,cAEI,mCAAM,cAAO,IAAI,CAAC,MAAZ,CAAmB,YAAY,CAAEJ,CAAC,CAACI,CAAD,CAAlC,CAAuC,OAAO,CAAE,iBAACE,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb,EAAX,EAAhD,EAAN,EAFJ,cAII,mCAAM,gCAAN,EAJJ,GAASH,MAAT,CADJ,CAQH,CATA,CADL,EALR,GAASP,GAAT,CADA,CAoBH,CArBA,CADL,EANJ,GADJ,CAiCH,CA3CD,CA8CA,cAAeN,CAAAA,YAAf","sourcesContent":["import { useState } from \"react\"\r\nimport HasName from \"../../interfaces/hasName\"\r\nimport StringKeyed from \"../../interfaces/stringKeyed\"\r\nimport \"./editableList.css\"\r\n\r\n\r\ntype Props<T extends StringKeyed & HasName> = {\r\n    values: T[],\r\n    title: string,\r\n}\r\n\r\nconst EditableList = <T extends StringKeyed & HasName>({values, title, }: Props<T>) => {\r\n    const [openIdx, setOpenIdx] = useState(-1)\r\n    const rowClickHandler = (idx: number) => {\r\n        if (idx === openIdx) {\r\n            setOpenIdx(-1)\r\n        } else {\r\n            setOpenIdx(idx)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"editableListContainer\">\r\n            <div className=\"editableListHeader\">\r\n                <div className=\"editableListTitle\"><h5>{title}</h5></div>\r\n                <div className=\"editableListHeaderButton\">+</div>\r\n            </div>\r\n            \r\n            <ul>\r\n                {values.map((v: T, idx: number) => {\r\n                    return (\r\n                    <li key={idx} className=\"editableListRow\">\r\n                        <div onClick={() => rowClickHandler(idx)} className={(openIdx === idx ? \" editableListRowActive\" : \"\")}>\r\n                            <span className=\"editableListCell\">{v.name}</span>\r\n                        </div>\r\n                        {openIdx === idx &&\r\n                            <ul>\r\n                                {Object.keys(v).map((k: string, idxKey: number) => {\r\n                                    return (\r\n                                        <li key={idxKey} className=\"editableListEdit\">\r\n                                            <span><label>{k}</label></span>\r\n                                            <span><input type=\"text\" defaultValue={v[k]} onFocus={(event) => event.target.select()} />\r\n                                            </span>\r\n                                            <span><button>Save</button></span>\r\n                                        \r\n                                        </li>)\r\n                                })}\r\n                            </ul>\r\n                        }\r\n                    </li>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditableList"]},"metadata":{},"sourceType":"module"}