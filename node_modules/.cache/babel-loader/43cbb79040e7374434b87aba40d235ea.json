{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{useState}from\"react\";import\"./editableList.css\";import{html}from'htm/react';var EditableList=function EditableList(_ref){var values=_ref.values,title=_ref.title;var _useState=useState(-1),_useState2=_slicedToArray(_useState,2),openIdx=_useState2[0],setOpenIdx=_useState2[1];var rowClickHandler=function rowClickHandler(idx){if(idx===openIdx){setOpenIdx(-1);}else{setOpenIdx(idx);}};return html(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n        <div class=\\\"editableListContainer\\\">\\n            <div class=\\\"editableListHeader\\\">\\n                <div class=\\\"editableListTitle\\\"><h5>\",\"</h5></div>\\n                <div class=\\\"editableListHeaderButton\\\">+</div>\\n            </div>\\n            \\n            <ul>\\n                \",\"\\n            </ul>\\n        </div>\\n    \"])),title,values.map(function(v,idx){return html(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n                        <li key=\",\" class=\\\"editableListRow\\\">\\n                            <div onClick=\",\" class=\",\">\\n                                <span class=\\\"editableListCell\\\">\",\"</span>\\n                            </div>\\n                            \",\"\\n                        </li>\\n                    \"])),idx,function(){return rowClickHandler(idx);},openIdx===idx?\" editableListRowActive\":\"\",v.name,openIdx===idx&&html(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n                                <ul>\\n                                    \",\"\\n                                </ul>\\n                            \"])),Object.keys(v).map(function(k,idxKey){return html(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n                                            <li key=\",\" class=\\\"editableListEdit\\\">\\n                                                <span><label>\",\"</label></span>\\n                                                <span><input type=\\\"text\\\" defaultValue=\",\" onFocus=\",\" />\\n                                                </span>\\n                                                <span><button>Save</button></span>                                            \\n                                            </li>\"])),idxKey,k,v[k],function(event){return event.target.select();});})));}));};export default EditableList;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.ts"],"names":["useState","html","EditableList","values","title","openIdx","setOpenIdx","rowClickHandler","idx","map","v","name","Object","keys","k","idxKey","event","target","select"],"mappings":"+ZAAA,OAASA,QAAT,KAAyB,OAAzB,CAGA,MAAO,oBAAP,CACA,OAASC,IAAT,KAAqB,WAArB,CAQA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkE,IAA/BC,CAAAA,MAA+B,MAA/BA,MAA+B,CAAvBC,KAAuB,MAAvBA,KAAuB,CACnF,cAA8BJ,QAAQ,CAAC,CAAC,CAAF,CAAtC,wCAAOK,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAiB,CACrC,GAAIA,GAAG,GAAKH,OAAZ,CAAqB,CACjBC,UAAU,CAAC,CAAC,CAAF,CAAV,CACH,CAFD,IAEO,CACHA,UAAU,CAACE,GAAD,CAAV,CACH,CACJ,CAND,CAQA,MAAOP,CAAAA,IAAP,wZAGiDG,KAHjD,CAQcD,MAAM,CAACM,GAAP,CAAW,SAACC,CAAD,CAAOF,GAAP,CAAuB,CAChC,MAAOP,CAAAA,IAAP,mYACcO,GADd,CAEuB,iBAAMD,CAAAA,eAAe,CAACC,GAAD,CAArB,EAFvB,CAE4DH,OAAO,GAAKG,GAAZ,CAAkB,wBAAlB,CAA6C,EAFzG,CAG6CE,CAAC,CAACC,IAH/C,CAKUN,OAAO,GAAKG,GAAZ,EAAmBP,IAAnB,uNAEQW,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeD,GAAf,CAAmB,SAACK,CAAD,CAAYC,MAAZ,CAA+B,CAChD,MAAOd,CAAAA,IAAP,ikBACcc,MADd,CAEuBD,CAFvB,CAGgDJ,CAAC,CAACI,CAAD,CAHjD,CAGgE,SAACE,KAAD,QAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb,EAAf,EAHhE,EAOH,CARC,CAFR,CALV,EAmBE,CApBJ,CARd,EAiCH,CA3CD,CA8CA,cAAehB,CAAAA,YAAf","sourcesContent":["import { useState } from \"react\"\r\nimport HasName from \"../../interfaces/hasName\"\r\nimport StringKeyed from \"../../interfaces/stringKeyed\"\r\nimport \"./editableList.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props<T extends StringKeyed & HasName> = {\r\n    values: T[],\r\n    title: string,\r\n}\r\n\r\nconst EditableList = <T extends StringKeyed & HasName>({values, title, }: Props<T>) => {\r\n    const [openIdx, setOpenIdx] = useState(-1)\r\n    const rowClickHandler = (idx: number) => {\r\n        if (idx === openIdx) {\r\n            setOpenIdx(-1)\r\n        } else {\r\n            setOpenIdx(idx)\r\n        }\r\n    }\r\n\r\n    return html`\r\n        <div class=\"editableListContainer\">\r\n            <div class=\"editableListHeader\">\r\n                <div class=\"editableListTitle\"><h5>${title}</h5></div>\r\n                <div class=\"editableListHeaderButton\">+</div>\r\n            </div>\r\n            \r\n            <ul>\r\n                ${values.map((v: T, idx: number) => {\r\n                    return html`\r\n                        <li key=${idx} class=\"editableListRow\">\r\n                            <div onClick=${() => rowClickHandler(idx)} class=${(openIdx === idx ? \" editableListRowActive\" : \"\")}>\r\n                                <span class=\"editableListCell\">${v.name}</span>\r\n                            </div>\r\n                            ${openIdx === idx && html`\r\n                                <ul>\r\n                                    ${Object.keys(v).map((k: string, idxKey: number) => {\r\n                                        return html`\r\n                                            <li key=${idxKey} class=\"editableListEdit\">\r\n                                                <span><label>${k}</label></span>\r\n                                                <span><input type=\"text\" defaultValue=${v[k]} onFocus=${(event:any) => event.target.select()} />\r\n                                                </span>\r\n                                                <span><button>Save</button></span>                                            \r\n                                            </li>`\r\n                                    })}\r\n                                </ul>\r\n                            `}\r\n                        </li>\r\n                    `}\r\n                )}\r\n            </ul>\r\n        </div>\r\n    `\r\n}\r\n\r\n\r\nexport default EditableList"]},"metadata":{},"sourceType":"module"}