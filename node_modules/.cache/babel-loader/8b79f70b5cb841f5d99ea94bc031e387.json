{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport Header from \"./header\";\nimport TextInput from \"./textInput\";\nimport \"./snippet.css\";\nimport SnippetCode from \"./snippetCode\";\nimport createClient from \"../../client\";\nimport { html } from \"htm/react\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../app\";\n\nfunction SnippetPg0() {\n  _s();\n\n  console.log(\"SnippetPg\");\n  const appState = useContext(StoreContext);\n  const [snippets, setSnippets] = useState([]);\n  const client = createClient();\n  const lang1 = appState.app.language1;\n  const lang2 = appState.app.language2;\n  const tg = appState.app.taskGroup;\n  useEffect(() => {\n    client.get(`{ENDPOINTS.get.snippet}${appState.app.language1}/${appState.app.language2}/${appState.app.taskGroup}`).then(r => {\n      console.log(\"Response\");\n      console.dir(r);\n\n      if (r.data) {\n        setSnippets(r.data);\n      }\n    }).catch(e => {\n      console.log(\"Error\");\n      console.dir(e);\n    });\n  }, [lang1, lang2, tg]);\n  return html`<div class=\"snippetsBody\">\n        <${Header} />\n        <main class=\"snippetsContainer\">\n            <div class=\"snippetsHeader\">\n                <div class=\"snippetLeftHeader\">${lang1}</div>\n                <div class=\"taskForHeader\">${tg}</div>\n                <div class=\"snippetRightHeader\">${lang2}</div>\n            </div>\n            ${snippets && snippets.map((snippet, idx) => {\n    const evenClass = idx % 2 === 0 ? \" evenRow\" : \"\";\n    return html`\n                    <div class=\"snippetRow\" key=${idx}>\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\n                            ${snippet.leftCode.length > 0 ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>` : html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                        <div class=${\"taskContainer\" + evenClass}>\n                            ${snippet.taskName}\n                        </div>\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\n                            ${snippet.rightCode.length > 0 ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>` : html`<${TextInput} numberProposals=\"4\"><//>`}\n                        </div>\n                    </div>`;\n  })}\n            <div class=\"snippetFooter\"> </div>\n        </main>\n    </div>\n    `;\n}\n\n_s(SnippetPg0, \"Jp8WtP914iulk7l5dVgyYm9eVOI=\");\n\n_c = SnippetPg0;\nconst SnippetPg = observer(SnippetPg0);\n_c2 = SnippetPg;\nexport default SnippetPg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SnippetPg0\");\n$RefreshReg$(_c2, \"SnippetPg\");","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts"],"names":["useContext","useEffect","useState","Header","TextInput","SnippetCode","createClient","html","observer","StoreContext","SnippetPg0","console","log","appState","snippets","setSnippets","client","lang1","app","language1","lang2","language2","tg","taskGroup","get","then","r","dir","data","catch","e","map","snippet","idx","evenClass","leftCode","length","taskName","rightCode","SnippetPg"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\r\nimport Snippet from \"../../types/snippet\"\r\nimport Header from \"./header\"\r\nimport TextInput from \"./textInput\"\r\nimport \"./snippet.css\"\r\nimport SnippetCode from \"./snippetCode\"\r\nimport createClient from \"../../client\"\r\nimport { AxiosInstance } from \"axios\"\r\nimport { html } from \"htm/react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport AppState from \"../../MobX/AppState\"\r\nimport { StoreContext } from \"../../app\"\r\n\r\n\r\n\r\nfunction SnippetPg0() {\r\n    console.log(\"SnippetPg\")\r\n    const appState = useContext(StoreContext)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    const lang1 = appState.app.language1\r\n    const lang2 = appState.app.language2\r\n    const tg = appState.app.taskGroup\r\n\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${appState.app.language1}/${appState.app.language2}/${appState.app.taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, tg])\r\n\r\n\r\n\r\n    return html`<div class=\"snippetsBody\">\r\n        <${Header} />\r\n        <main class=\"snippetsContainer\">\r\n            <div class=\"snippetsHeader\">\r\n                <div class=\"snippetLeftHeader\">${lang1}</div>\r\n                <div class=\"taskForHeader\">${tg}</div>\r\n                <div class=\"snippetRightHeader\">${lang2}</div>\r\n            </div>\r\n            ${snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return html`\r\n                    <div class=\"snippetRow\" key=${idx}>\r\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\r\n                            ${snippet.leftCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                        <div class=${\"taskContainer\" + evenClass}>\r\n                            ${snippet.taskName}\r\n                        </div>\r\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\r\n                            ${snippet.rightCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                    </div>`\r\n            })}\r\n            <div class=\"snippetFooter\"> </div>\r\n        </main>\r\n    </div>\r\n    `\r\n}\r\n\r\nconst SnippetPg = observer(SnippetPg0)\r\nexport default SnippetPg"]},"metadata":{},"sourceType":"module"}