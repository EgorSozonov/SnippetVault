{"ast":null,"code":"import Toggler from'../../commonComponents/toggler/toggler';import\"../snippet/snippet.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mockAlternatives=[{leftCode:\"str3 = str1.replace(str2, \\\"bcjk\\\");\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:1,taskName:\"Replace substring\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"    if (it is FileInfo) {\\n\"+\"        fNames[i, 0] = it.Name;\\n\"+\"        fNames[i, 1] = dirInfo.FullName;\\n\"+\"        fDates[i, 0] = it.LastWriteTime;\\n\"+\"    }\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:2,taskName:\"Get last modified times\"},{leftCode:\"str3 = str1.replace(str2, \\\"bcjk\\\");\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:3,taskName:\"Index of first occurrence of substring\"},{leftCode:\"int index = str.LastIndexOf(\\\"bz\\\");\",leftId:1,rightCode:\"\",rightId:2,taskId:4,taskName:\"Index of last occurrence of substring\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:5,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:6,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:7,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:8,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:9,taskName:\"Get last modified times\"}];function Alternative(){return/*#__PURE__*/_jsx(\"div\",{className:\"adminAlternative\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"snippetsContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"snippetsHeader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"snippetLeftHeader\",children:\"Alternatives\"}),/*#__PURE__*/_jsx(\"div\",{className:\"taskForHeader\",children:/*#__PURE__*/_jsx(Toggler,{leftChoice:\"Old->new\",rightChoice:\"Highest votes first\",initChosen:false})}),/*#__PURE__*/_jsx(\"div\",{className:\"snippetRightHeader\",children:\"\\xA0\"})]}),mockAlternatives.map(function(snippet,idx){var evenClass=idx%2===0?\" evenRow\":\"\";return/*#__PURE__*/_jsxs(\"div\",{className:\"snippetContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"snippet leftSide\"+evenClass,children:snippet.leftCode}),/*#__PURE__*/_jsxs(\"div\",{className:\"taskContainer\"+evenClass,children:[/*#__PURE__*/_jsx(\"div\",{className:\"taskLeft\"}),/*#__PURE__*/_jsx(\"div\",{className:\"task\",children:snippet.taskName}),/*#__PURE__*/_jsx(\"div\",{className:\"taskRight commentButton\",title:\"Promote to main version\",children:\"P\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"snippet rightSide\"+evenClass,children:snippet.rightCode})]},idx);})]})});}export default Alternative;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/alternative.tsx"],"names":["Toggler","mockAlternatives","leftCode","leftId","rightCode","rightId","taskId","taskName","Alternative","map","snippet","idx","evenClass"],"mappings":"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","sourcesContent":["import Toggler from '../../commonComponents/toggler/toggler';\r\nimport HeaderRightButton from '../../commonComponents/headerRightButton/headerRightButton';\r\nimport Snippet from '../../types/snippet';\r\nimport \"../snippet/snippet.css\"\r\n\r\n\r\nconst mockAlternatives: Snippet[] = [\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 1, taskName: \"Replace substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"    if (it is FileInfo) {\\n\"\r\n            + \"        fNames[i, 0] = it.Name;\\n\"\r\n            + \"        fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"        fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"    }\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 2, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 3, taskName: \"Index of first occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"int index = str.LastIndexOf(\\\"bz\\\");\", leftId: 1,\r\n        rightCode: \"\", rightId: 2, \r\n        taskId: 4, taskName: \"Index of last occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 5, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 6, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 7, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 8, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 9, taskName: \"Get last modified times\", \r\n    },\r\n]\r\n\r\nfunction Alternative() {\r\n    return (\r\n        <div className=\"adminAlternative\">\r\n            \r\n            <div className=\"snippetsContainer\">\r\n                <div className=\"snippetsHeader\">\r\n                    <div className=\"snippetLeftHeader\">\r\n                        Alternatives\r\n                    </div>\r\n                    <div className=\"taskForHeader\"><Toggler leftChoice=\"Old->new\" rightChoice=\"Highest votes first\" initChosen={false}>\r\n                                </Toggler></div>\r\n                    <div className=\"snippetRightHeader\">\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n                {mockAlternatives.map((snippet: Snippet, idx: number ) => {\r\n                    const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                    return (<div className=\"snippetContainer\" key={idx}>\r\n                        <div className={\"snippet leftSide\" + evenClass} >{snippet.leftCode}</div>\r\n                        <div className={\"taskContainer\" + evenClass}>\r\n                            <div className=\"taskLeft\">\r\n                            </div>\r\n                            <div className=\"task\">{snippet.taskName}</div>\r\n                            <div className=\"taskRight commentButton\" title=\"Promote to main version\">\r\n                                P\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"snippet rightSide\" + evenClass}>{snippet.rightCode}</div>\r\n                    </div>)\r\n                })}\r\n                \r\n            </div>\r\n\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Alternative"]},"metadata":{},"sourceType":"module"}