{"ast":null,"code":"import { INIT_STATE } from \"./state\";\n\nconst reducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case \"login\":\n      return state;\n\n    case \"logout\":\n      return state;\n\n    case \"changeSelect\":\n      {\n        return { ...state,\n          openSelect: action.payload.selectName\n        };\n      }\n\n    case \"setLanguage1\":\n      {\n        return { ...state,\n          language1: action.payload.newValue\n        };\n      }\n\n    case \"setLanguage2\":\n      {\n        return { ...state,\n          language2: action.payload.newValue\n        };\n      }\n\n    case \"setTaskGroup\":\n      {\n        return { ...state,\n          taskGroup: action.payload.newValue\n        };\n      }\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault.WEB/src/redux/reducer.ts"],"names":["INIT_STATE","reducer","state","action","type","openSelect","payload","selectName","language1","newValue","language2","taskGroup"],"mappings":"AACA,SAASA,UAAT,QAAoC,SAApC;;AAYA,MAAMC,OAAsC,GAAG,CAACC,KAAc,GAAGF,UAAlB,EAA8BG,MAA9B,KAA+D;AAC1G,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACI,aAAOF,KAAP;;AACJ,SAAK,QAAL;AACI,aAAOA,KAAP;;AACJ,SAAK,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGA,KAAJ;AAAWG,UAAAA,UAAU,EAAEF,MAAM,CAACG,OAAP,CAAeC;AAAtC,SAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGL,KAAJ;AAAWM,UAAAA,SAAS,EAAEL,MAAM,CAACG,OAAP,CAAeG;AAArC,SAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGP,KAAJ;AAAWQ,UAAAA,SAAS,EAAEP,MAAM,CAACG,OAAP,CAAeG;AAArC,SAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGP,KAAJ;AAAWS,UAAAA,SAAS,EAAER,MAAM,CAACG,OAAP,CAAeG;AAArC,SAAP;AACH;AAhBL;;AAkBA,SAAOP,KAAP;AACH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { Reducer } from \"redux\";\r\nimport { INIT_STATE, SVState } from \"./state\"\r\n\r\n\r\ntype ReduxAction = \r\n    | {type: \"login\", payload: {userName: string, pw: string}}\r\n    | {type: \"logout\", payload: {}}\r\n    | {type: \"changeSelect\", payload: {selectName: string}}\r\n    | {type: \"setLanguage1\", payload: {newValue: string}}\r\n    | {type: \"setLanguage2\", payload: {newValue: string}}\r\n    | {type: \"setTaskGroup\", payload: {newValue: string}}\r\n\r\n\r\nconst reducer: Reducer<SVState, ReduxAction> = (state: SVState = INIT_STATE, action: ReduxAction): SVState => {\r\n    switch(action.type) {\r\n        case \"login\":\r\n            return state;\r\n        case \"logout\":\r\n            return state;\r\n        case \"changeSelect\": {\r\n            return {...state, openSelect: action.payload.selectName, }\r\n        }\r\n        case \"setLanguage1\": {\r\n            return {...state, language1: action.payload.newValue, }\r\n        }\r\n        case \"setLanguage2\": {\r\n            return {...state, language2: action.payload.newValue, }\r\n        }\r\n        case \"setTaskGroup\": {\r\n            return {...state, taskGroup: action.payload.newValue, }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}