{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[0],{10:function(e,n,a){},31:function(e,n,a){},39:function(e,n,a){},59:function(e,n,a){},60:function(e,n,a){},61:function(e,n,a){},64:function(e,n,a){\"use strict\";a.r(n);a(31);var t=a(14),o=a.n(t);a(12),a(3);a(0),a(9),a(39);var u=a(1);a(10);a(28);a(59);a(60);a(61);var r=a(30);var c=(e=s,n)=>{switch(n.type){case\"login\":case\"logout\":return e;case\"changeSelect\":return{...e,openSelect:n.payload.selectName};case\"setLanguage1\":return{...e,language1:n.payload.newValue};case\"setLanguage2\":return{...e,language2:n.payload.newValue};case\"setTaskGroup\":return{...e,taskGroup:n.payload.newValue}}return e};const s={openSelect:\"\",language1:\"\",language2:\"\",taskGroup:\"\"};Object(r.a)(c);o.a.render(u.a`<div style=\"color: red;\">asg<//>`,document.getElementById(\"snippetRoot\"))}},[[64,1,2]]]);","name":"static/js/main.21eccd3e.chunk.js","map":{"version":3,"sources":["static/js/main.21eccd3e.chunk.js"],"names":["this","push","module","exports","__webpack_require__","__webpack_exports__","r","react_dom","react_dom_default","n","index_module","redux","redux_reducer","state","INIT_STATE","action","type","openSelect","payload","selectName","language1","newValue","language2","taskGroup","Object","a","render","document","getElementById"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,GAAG,CAExE,GACA,SAAUC,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQC,EAASC,KAM3B,GACA,SAAUF,EAAQG,EAAqBD,GAE7C,aAEAA,EAAoBE,EAAED,GAGZD,EAAoB,IAA9B,IAGIG,EAAYH,EAAoB,IAChCI,EAAiCJ,EAAoBK,EAAEF,GAGpCH,EAAoB,IAGxBA,EAAoB,GAK3BA,EAAoB,GAGvBA,EAAoB,GAGXA,EAAoB,IARuO,IAWzQM,EAAeN,EAAoB,GAwBjBA,EAAoB,IA8D9BA,EAAoB,IAgCbA,EAAoB,IAmEzBA,EAAoB,IAoBtBA,EAAoB,IAiFK,IAEjCO,EAAQP,EAAoB,IAGia,IAAIQ,EAAvb,CAACC,EAAMC,EAAWC,KAAU,OAAOA,EAAOC,MAAM,IAAI,QAAqB,IAAI,SAAS,OAAOH,EAAM,IAAI,eAAgB,MAAM,IAAIA,EAAMI,WAAWF,EAAOG,QAAQC,YAAa,IAAI,eAAgB,MAAM,IAAIN,EAAMO,UAAUL,EAAOG,QAAQG,UAAW,IAAI,eAAgB,MAAM,IAAIR,EAAMS,UAAUP,EAAOG,QAAQG,UAAW,IAAI,eAAgB,MAAM,IAAIR,EAAMU,UAAUR,EAAOG,QAAQG,UAAY,OAAOR,GAE5Z,MAAMC,EAAW,CAACG,WAAW,GAAGG,UAAU,GAAGE,UAAU,GAAGC,UAAU,IAAsBC,OAAOb,EAA2B,EAAlCa,CAAqCZ,GAMvHJ,EAAkBiB,EAAEC,OAAOhB,EAA2B,CAAC,mCAG/DiB,SAASC,eAAe,kBAItB,CAAC,CAAC,GAAG,EAAE"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[0],{\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 59:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 64:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/app.css\nvar app = __webpack_require__(31);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(14);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js\nvar react_router = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/path.ts\nconst PATHS={\"snippet\":{description:\"View snippets\",url:\"/\"},\"alternative\":{description:\"Alternatives & comments\",url:\"/alternative\"},\"group\":{description:\"Edit task group\",url:\"/group\"},\"admin\":{description:\"Admin page\",url:\"/adminning\"}};/* harmony default export */ var path = (PATHS);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 24 modules\nvar es = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/commonComponents/hoverSelect/hoverSelect.css\nvar hoverSelect = __webpack_require__(39);\n\n// EXTERNAL MODULE: ./node_modules/htm/react/index.module.js + 1 modules\nvar index_module = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/commonComponents/hoverSelect/hoverSelect.ts\nconst HoverSelect=({choices,uniqueName,selectCallback})=>{const[currValue,setCurrValue]=Object(react[\"useState\"])(\" \");const currentlyOpen=Object(es[\"c\" /* useSelector */])(state=>state.openSelect);const dispatch=Object(es[\"b\" /* useDispatch */])();const isOpen=currentlyOpen===uniqueName;const onSelect=c=>{setCurrValue(c);selectCallback(c);dispatch({type:\"changeSelect\",payload:{selectName:\"\"}});};const onClickHeader=()=>{if(isOpen){dispatch({type:\"changeSelect\",payload:{selectName:\"\"}});}else{dispatch({type:\"changeSelect\",payload:{selectName:uniqueName}});}};return index_module[\"a\" /* html */]`\n        <div class=\"hoverSelect\" onMouseEnter=${()=>dispatch({type:\"changeSelect\",payload:{selectName:uniqueName}})}\n                onMouseLeave=${()=>dispatch({type:\"changeSelect\",payload:{selectName:\"\"}})}>            \n            <span class=\"search\" onClick=${onClickHeader}>\n                <span class=${\"leftButton\"+(isOpen?\" hoverSelectActive\":\" hoverSelectInactive\")}>(-)</span>\n                <span class=\"rightLabel\">${currValue}</span>\n            </span>\n            {isOpen && \n                <div class=\"menu\">\n                    <ul class=\"list\">\n                        <li>\n                            <ul class=\"optgroup\">\n                                ${choices.map((c,idx)=>{return index_module[\"a\" /* html */]`<li key=${idx} onClick=${()=>onSelect(c)}>{c}</li>`;})}\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            }\n        </div>\n    `;};/* harmony default export */ var hoverSelect_hoverSelect = (HoverSelect);\n// EXTERNAL MODULE: ./src/components/snippet/snippet.css\nvar snippet_snippet = __webpack_require__(10);\n\n// CONCATENATED MODULE: ./src/components/snippet/header.ts\nconst Header=()=>{const dispatch=Object(es[\"b\" /* useDispatch */])();const callback1=c=>{dispatch({type:\"setLanguage1\",payload:{newValue:c}});};const callback2=c=>{dispatch({type:\"setLanguage2\",payload:{newValue:c}});};const callbackTaskGroup=c=>{dispatch({type:\"setTaskGroup\",payload:{newValue:c}});};return index_module[\"a\" /* html */]`\n        <nav>\n            <div class=\"headerContainer\">\n                <div class=\"choiceInput headerLeftmost\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\n                    <${hoverSelect_hoverSelect} choices=${[\"strings\",\"file system\",\"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\n                        selectCallback=${callbackTaskGroup}><//>\n                </div>\n                <div class=\"choiceInput\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\n                    <${hoverSelect_hoverSelect} choices=${[\"C#\",\"Swift\",\"Typescript\"]} uniqueName=\"Lang1\"\n                        selectCallback=${callback1}><//>\n                </div>\n                <div class=\"choiceInput\">\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\n                    <${hoverSelect_hoverSelect} choices=${[\"C#\",\"Typescript\"]} uniqueName=\"Lang2\" \n                        selectCallback=${callback2}><//>\n                    \n                </div>\n                <div class=\"choiceInputButton\">\n                    ↩ Previous\n                </div>\n                <div class=\"choiceInputButton headerRightmost\">\n                    ↪ Next\n                </div>\n            </div>\n        </nav>\n        `;};/* harmony default export */ var header = (Header);\n// CONCATENATED MODULE: ./src/components/snippet/textInput.ts\nfunction TextInput({numberProposals}){return index_module[\"a\" /* html */]`\n        <div>\n            <p>Propose a snippet ${numberProposals>0?index_module[\"a\" /* html */]`${numberProposals} proposals already awaiting premoderation`:\"\"}:</p>\n            <p><textarea class=\"snippetTextArea\"></textarea></p>\n            <p><button class=\"snippetButton\">Save</button></p>\n        </div>\n    `;}/* harmony default export */ var textInput = (TextInput);\n// CONCATENATED MODULE: ./src/components/snippet/snippetCode.ts\nfunction SnippetCode({content,isRight}){const snippetContent=index_module[\"a\" /* html */]`\n        <pre class=\"snippetCode\">\n            {content}\n        </pre>\n        `;return index_module[\"a\" /* html */]`\n        ${isRight?index_module[\"a\" /* html */]`<div class=\"snippetContentContainer\">\n                    <div class=\"snippetButtons\">\n                        <div class=\"commentButton\" title=\"Alternative versions\">A</div>\n                        <div class=\"commentButton\" title=\"Copy text\">C</div>\n                    </div>\n                    ${snippetContent}\n                </div>\n            `:index_module[\"a\" /* html */]`<div class=\"snippetContentContainer\">\n                    ${snippetContent}\n                    <div class=\"snippetButtons snippetButtonsRight\">\n                        <div class=\"commentButton\" title=\"Alternative versions\">A</div>\n                        <div class=\"commentButton\" title=\"Copy text\">C</div>\n                    </div>\n                </div>\n            `}\n    `;}/* harmony default export */ var snippetCode = (SnippetCode);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(28);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// CONCATENATED MODULE: ./src/client.ts\nconst axiosConfig={baseURL:\"http://localhost:40100/api/v1/\",timeout:10000//headers: {'X-Custom-Header': 'foobar'},\n};const createClient=()=>axios_default.a.create(axiosConfig);/* harmony default export */ var src_client = (createClient);\n// CONCATENATED MODULE: ./src/components/snippet/snippetPg.ts\nfunction SnippetPg(){console.log(\"SnippetPg\");const lang1=Object(es[\"c\" /* useSelector */])(state=>state.language1);const lang2=Object(es[\"c\" /* useSelector */])(state=>state.language2);const taskGroup=Object(es[\"c\" /* useSelector */])(state=>state.taskGroup);const[snippets,setSnippets]=Object(react[\"useState\"])([]);const client=src_client();Object(react[\"useEffect\"])(()=>{client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`).then(r=>{console.log(\"Response\");console.dir(r);if(r.data){setSnippets(r.data);}}).catch(e=>{console.log(\"Error\");console.dir(e);});},[lang1,lang2,taskGroup]);return index_module[\"a\" /* html */]`<div class=\"snippetsBody\">\n        <${header} />\n        <main class=\"snippetsContainer\">\n            <div class=\"snippetsHeader\">\n                <div class=\"snippetLeftHeader\">${lang1}</div>\n                <div class=\"taskForHeader\">${taskGroup}</div>\n                <div class=\"snippetRightHeader\">${lang2}</div>\n            </div>\n            ${snippets&&snippets.map((snippet,idx)=>{const evenClass=idx%2===0?\" evenRow\":\"\";return index_module[\"a\" /* html */]`\n                    <div class=\"snippetRow\" key=${idx}>\n                        <div class=${\"snippetContent leftSide\"+evenClass}>\n                            ${snippet.leftCode.length>0?index_module[\"a\" /* html */]`<${snippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`:index_module[\"a\" /* html */]`<${textInput} numberProposals=\"4\"><//>`}\n                        </div>\n                        <div class=${\"taskContainer\"+evenClass}>\n                            ${snippet.taskName}\n                        </div>\n                        <div class=${\"snippetContent rightSide\"+evenClass}>\n                            ${snippet.rightCode.length>0?index_module[\"a\" /* html */]`<${snippetCode} content=${snippet.rightCode} isRight={true}><//>`:index_module[\"a\" /* html */]`<${textInput} numberProposals=\"4\"><//>`}\n                        </div>\n                    </div>`;})}\n            <div style=\"margin-bottom: 20px; background-color: #303030'\">&nbsp;</div>\n        </main>\n    </div>\n    `;}/* harmony default export */ var snippetPg = (SnippetPg);\n// EXTERNAL MODULE: ./src/commonComponents/editableList/editableList.css\nvar editableList = __webpack_require__(59);\n\n// CONCATENATED MODULE: ./src/commonComponents/editableList/editableList.ts\nconst EditableList=({values,title})=>{const[openIdx,setOpenIdx]=Object(react[\"useState\"])(-1);const rowClickHandler=idx=>{if(idx===openIdx){setOpenIdx(-1);}else{setOpenIdx(idx);}};return index_module[\"a\" /* html */]`\n        <div class=\"editableListContainer\">\n            <div class=\"editableListHeader\">\n                <div class=\"editableListTitle\"><h5>${title}</h5></div>\n                <div class=\"editableListHeaderButton\">+</div>\n            </div>\n            \n            <ul>\n                ${values.map((v,idx)=>{return index_module[\"a\" /* html */]`\n                        <li key=${idx} class=\"editableListRow\">\n                            <div onClick=${()=>rowClickHandler(idx)} class=${openIdx===idx?\" editableListRowActive\":\"\"}>\n                                <span class=\"editableListCell\">${v.name}</span>\n                            </div>\n                            ${openIdx===idx&&index_module[\"a\" /* html */]`\n                                <ul>\n                                    ${Object.keys(v).map((k,idxKey)=>{return index_module[\"a\" /* html */]`\n                                            <li key=${idxKey} class=\"editableListEdit\">\n                                                <span><label>${k}</label></span>\n                                                <span><input type=\"text\" defaultValue=${v[k]} onFocus=${event=>event.target.select()} />\n                                                </span>\n                                                <span><button>Save</button></span>                                            \n                                            </li>`;})}\n                                </ul>\n                            `}\n                        </li>\n                    `;})}\n            </ul>\n        </div>\n    `;};/* harmony default export */ var editableList_editableList = (EditableList);\n// CONCATENATED MODULE: ./src/components/admin/alternative.ts\nconst mockAlternatives=[{leftCode:\"str3 = str1.replace(str2, \\\"bcjk\\\");\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:1,taskName:\"Replace substring\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"    if (it is FileInfo) {\\n\"+\"        fNames[i, 0] = it.Name;\\n\"+\"        fNames[i, 1] = dirInfo.FullName;\\n\"+\"        fDates[i, 0] = it.LastWriteTime;\\n\"+\"    }\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:2,taskName:\"Get last modified times\"},{leftCode:\"str3 = str1.replace(str2, \\\"bcjk\\\");\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:3,taskName:\"Index of first occurrence of substring\"},{leftCode:\"int index = str.LastIndexOf(\\\"bz\\\");\",leftId:1,rightCode:\"\",rightId:2,taskId:4,taskName:\"Index of last occurrence of substring\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:5,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:6,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:7,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:8,taskName:\"Get last modified times\"},{leftCode:\"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"+\"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"+\"foreach (FileSystemInfo it in fInfos) {\\n\"+\"if (it is FileInfo) {\\n\"+\"fNames[i, 0] = it.Name;\\n\"+\"fNames[i, 1] = dirInfo.FullName;\\n\"+\"fDates[i, 0] = it.LastWriteTime;\\n\"+\"}\\n\"+\"}\",leftId:1,rightCode:\"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\",rightId:2,taskId:9,taskName:\"Get last modified times\"}];function Alternative(){return index_module[\"a\" /* html */]`\n        <div class=\"adminAlternative\">\n            \n            <div class=\"snippetsContainer\">\n                <div class=\"snippetsHeader\">\n                    <div class=\"snippetLeftHeader\">\n                        Alternatives\n                    </div>\n                    <div class=\"taskForHeader\"><Toggler leftChoice=\"Old->new\" rightChoice=\"Highest votes first\" initChosen={false}>\n                                </Toggler></div>\n                    <div class=\"snippetRightHeader\">\n                        &nbsp;\n                    </div>\n                </div>\n                ${mockAlternatives.map((snippet,idx)=>{const evenClass=idx%2===0?\" evenRow\":\"\";return index_module[\"a\" /* html */]`\n                        <div class=\"snippetContainer\" key={idx}>\n                            <div class=${\"snippet leftSide\"+evenClass}>${snippet.leftCode}</div>\n                            <div class=${\"taskContainer\"+evenClass}>\n                                <div class=\"taskLeft\">\n                                </div>\n                                <div class=\"task\">${snippet.taskName}</div>\n                                <div class=\"taskRight commentButton\" title=\"Promote to main version\">\n                                    P\n                                </div>\n                            </div>\n                            <div class=${\"snippet rightSide\"+evenClass}>${snippet.rightCode}</div>\n                        </div>\n                        `;})}\n                \n            </div>\n\n        </div>\n    `;}/* harmony default export */ var alternative = (Alternative);\n// EXTERNAL MODULE: ./src/commonComponents/toggler/toggler.css\nvar toggler = __webpack_require__(60);\n\n// CONCATENATED MODULE: ./src/commonComponents/toggler/toggler.ts\nconst Toggler=({leftChoice,rightChoice,initChosen})=>{const[currValue,setCurrValue]=Object(react[\"useState\"])(initChosen);return index_module[\"a\" /* html */]`\n        <div class=\"togglerContainer\" onClick=${()=>setCurrValue(!currValue)}>\n            <span class=${\"togglerLeftRect \"+(currValue?\"togglerLeftRectInactive\":\"togglerLeftRectActive\")}></span>\n            <span class=${\"togglerChoice\"+(currValue?\" inactiveChoice\":\" activeChoiceLeft\")}>\n                ${leftChoice}\n            </span>\n            <span class=${\"toggleSwitch \"+(currValue?\"on\":\"off\")}>\n                <div ></div>\n            </span>\n\n            <span class=${\"togglerChoice\"+(currValue?\" activeChoiceRight\":\" inactiveChoice\")}>\n                ${rightChoice}\n            </span>\n            <span class=${\"togglerRightRect \"+(currValue?\" togglerRightRectActive\":\"togglerRightRectInactive\")}></span>\n        </div>\n    `;};/* harmony default export */ var toggler_toggler = (Toggler);\n// EXTERNAL MODULE: ./src/components/admin/admin.css\nvar admin = __webpack_require__(61);\n\n// CONCATENATED MODULE: ./src/components/admin/newProposal.ts\nconst mockProposals=[];function NewProposal(){return index_module[\"a\" /* html */]`\n        <div class=\"newProposal\">\n            <div class=\"snippetsContainer\">\n                <div class=\"snippetsHeader\">\n                    <div class=\"snippetLeftHeader\">&nbsp;</div>\n                    <div class=\"taskForHeader\">\n                        <${toggler_toggler} leftChoice=\"Old->new\" rightChoice=\"New->old\" initChosen=\"false\" />\n                    </div>\n                    <div class=\"snippetRightHeader\">\n                        New Proposals\n                    </div>\n                </div>\n                ${mockProposals.map((snippet,idx)=>{const evenClass=idx%2===0?\" evenRow\":\"\";return index_module[\"a\" /* html */]`\n                        <div class=\"snippetContainer\" key=${idx}>\n                            <div class=${\"snippet leftSide\"+evenClass} >{}</div>\n                            <div class=${\"taskContainer\"+evenClass}>\n                                <div class=\"taskLeft\">\n                                </div>\n                                <div class=\"task\">\n                                    <span>${snippet.TaskName}</span> <span>${snippet.TSUpload.toString()}</span></div>\n                                <div class=\"taskRight commentButton\" title=\"Accept\">\n                                    A\n                                </div>\n                            </div>\n                            <div class=${\"snippet rightSide\"+evenClass}>${snippet.ProposalCode}</div>\n                        </div>`;})}\n                \n            </div>\n        </div>\n    `;}/* harmony default export */ var newProposal = (NewProposal);\n// CONCATENATED MODULE: ./src/components/admin/admin.ts\nconst groups=[{id:1,name:\"String manipulation\"},{id:2,name:\"File system tasks\"},{id:3,name:\"Common types & operations on them\"}];const langs=[{id:1,name:\"C#\",languageGroup:\"Universal\"},{id:2,name:\"C++\",languageGroup:\"Universal\"},{id:3,name:\"Typescript\",languageGroup:\"Universal\"}];const ListTaskGroups=props=>editableList_editableList(props);const ListLanguages=props=>editableList_editableList(props);function Admin(){return index_module[\"a\" /* html */]`\n        <div style=\"overflow: scroll; background-color: #303030;\">\n            <p>\n                <${react_router_dom[\"b\" /* NavLink */]} to=${path[\"snippet\"].url}>\n                    <div class=\"adminHeader\">Back to snippets</div>\n                <//>\n            </p>\n            <${ListTaskGroups} values=${groups} title=\"Task groups\"></EditableList>\n            <${ListLanguages} values=${langs} title=\"Languages\"></EditableList>\n            <div>\n                <${alternative} />\n            </div>\n            <div>\n                <${newProposal} />\n            </div>\n            \n            \n\n        </div>\n    `;}/* harmony default export */ var admin_admin = (Admin);\n// CONCATENATED MODULE: ./src/components/group/group.ts\nfunction Group(){return index_module[\"a\" /* html */]`\n        <div>Hello world group\n            <p>\n                <${react_router_dom[\"b\" /* NavLink */]} to=${path[\"admin\"].url}>\n                    <div class=\"adminHeader\">Back to admin</div>\n                <//>\n            </p>\n        </div>\n    `;}/* harmony default export */ var group = (Group);\n// CONCATENATED MODULE: ./src/content.ts\nconst Content=()=>{console.log(\"Content render\");return index_module[\"a\" /* html */]`\n    <${react_router_dom[\"a\" /* BrowserRouter */]}>\n        <div style=\"background-color: #303030; scrollbar-width: thin;\">\n            <${react_router[\"c\" /* Switch */]}>\n                <${react_router[\"a\" /* Route */]} exact=${true} path=${path[\"snippet\"].url}>\n                    <${snippetPg} />\n                <//>\n                <${react_router[\"a\" /* Route */]} exact=${true} path=${path[\"group\"].url}>\n                    <${group} />\n                <//>\n                <${react_router[\"a\" /* Route */]} exact=${true} path=${path[\"admin\"].url}>\n                    <${admin_admin} />\n                <//>\n            <//>\n        </div>\n    <//>\n    `;};/* harmony default export */ var src_content = (Content);\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules\nvar redux = __webpack_require__(30);\n\n// CONCATENATED MODULE: ./src/redux/reducer.ts\nconst reducer=(state=INIT_STATE,action)=>{switch(action.type){case\"login\":return state;case\"logout\":return state;case\"changeSelect\":{return{...state,openSelect:action.payload.selectName};}case\"setLanguage1\":{return{...state,language1:action.payload.newValue};}case\"setLanguage2\":{return{...state,language2:action.payload.newValue};}case\"setTaskGroup\":{return{...state,taskGroup:action.payload.newValue};}}return state;};/* harmony default export */ var redux_reducer = (reducer);\n// CONCATENATED MODULE: ./src/redux/state.ts\nconst INIT_STATE={openSelect:\"\",language1:\"\",language2:\"\",taskGroup:\"\"};const globalState=Object(redux[\"a\" /* createStore */])(redux_reducer);/* harmony default export */ var redux_state = (globalState);\n// CONCATENATED MODULE: ./src/app.ts\nconst App=()=>{console.log(\"App\");return index_module[\"a\" /* html */]`\n        <${es[\"a\" /* Provider */]} store=${redux_state}>\n            <${src_content} />\n        <//>\n    `;};react_dom_default.a.render(index_module[\"a\" /* html */]`<div style=\"color: red;\">asg<//>`,// html`<${React.StrictMode}>\n//   <${App} />\n// <//>`,    \ndocument.getElementById(\"snippetRoot\"));\n\n/***/ })\n\n},[[64,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippet.css","/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/app.css","/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.css","/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.css","/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/toggler/toggler.css","/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/zrx/Projects/SnippetVault/src/frontend/node_modules/postcss-loader/src/index.js??postcss!/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/admin.css","/Users/zrx/Projects/SnippetVault/src/frontend/src/path.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/header.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/textInput.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetCode.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/client.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/alternative.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/toggler/toggler.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/newProposal.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/admin.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/group/group.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/content.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/reducer.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/state.ts","/Users/zrx/Projects/SnippetVault/src/frontend/src/app.ts"],"names":["PATHS","description","url","HoverSelect","choices","uniqueName","selectCallback","currValue","setCurrValue","useState","currentlyOpen","useSelector","state","openSelect","dispatch","useDispatch","isOpen","onSelect","c","type","payload","selectName","onClickHeader","html","map","idx","Header","callback1","newValue","callback2","callbackTaskGroup","TextInput","numberProposals","SnippetCode","content","isRight","snippetContent","axiosConfig","baseURL","timeout","createClient","axios","create","SnippetPg","console","log","lang1","language1","lang2","language2","taskGroup","snippets","setSnippets","client","useEffect","get","then","r","dir","data","catch","e","snippet","evenClass","leftCode","length","taskName","rightCode","EditableList","values","title","openIdx","setOpenIdx","rowClickHandler","v","name","Object","keys","k","idxKey","event","target","select","mockAlternatives","leftId","rightId","taskId","Alternative","Toggler","leftChoice","rightChoice","initChosen","mockProposals","NewProposal","TaskName","TSUpload","toString","ProposalCode","groups","id","langs","languageGroup","ListTaskGroups","props","ListLanguages","Admin","NavLink","Group","Content","BrowserRouter","Switch","Route","reducer","INIT_STATE","action","globalState","createStore","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","type Page = \r\n    | \"admin\"\r\n    | \"snippet\"\r\n    | \"alternative\"\r\n    | \"group\"\r\n\r\ntype PagePath = { \r\n    url: string, \r\n    description: string,\r\n}\r\n\r\ntype Paths = {\r\n    [key in Page]: PagePath\r\n}\r\n\r\nconst PATHS: Paths = {\r\n    \"snippet\": {description: \"View snippets\", url: \"/\"},\r\n    \"alternative\": {description: \"Alternatives & comments\", url: \"/alternative\"},\r\n    \"group\": {description: \"Edit task group\", url: \"/group\"},\r\n    \"admin\": {description: \"Admin page\", url: \"/adminning\"},\r\n}\r\n\r\nexport default PATHS","import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { SVState } from \"../../redux/state\"\r\nimport \"./hoverSelect.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props = {\r\n    choices: string[],\r\n    uniqueName: string,\r\n    selectCallback: (c: string) => void,\r\n}\r\n\r\nconst HoverSelect: React.FunctionComponent<Props> = ({choices, uniqueName, selectCallback, }) => {\r\n    const [currValue, setCurrValue] = useState(\" \")\r\n    const currentlyOpen = useSelector((state: SVState) => state.openSelect)\r\n    const dispatch = useDispatch()\r\n    const isOpen = currentlyOpen === uniqueName\r\n\r\n    const onSelect = (c: string) => {\r\n        setCurrValue(c)\r\n        selectCallback(c)\r\n        dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})\r\n    }\r\n\r\n    const onClickHeader = () => {\r\n        if (isOpen) {\r\n            dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})\r\n        } else {\r\n            dispatch({type: \"changeSelect\", payload: {selectName: uniqueName, }})\r\n        }\r\n    }\r\n    return html`\r\n        <div class=\"hoverSelect\" onMouseEnter=${() => dispatch({type: \"changeSelect\", payload: {selectName: uniqueName, }})}\r\n                onMouseLeave=${() => dispatch({type: \"changeSelect\", payload: {selectName: \"\", }})}>            \r\n            <span class=\"search\" onClick=${onClickHeader}>\r\n                <span class=${\"leftButton\" + (isOpen ? \" hoverSelectActive\" : \" hoverSelectInactive\")}>(-)</span>\r\n                <span class=\"rightLabel\">${currValue}</span>\r\n            </span>\r\n            {isOpen && \r\n                <div class=\"menu\">\r\n                    <ul class=\"list\">\r\n                        <li>\r\n                            <ul class=\"optgroup\">\r\n                                ${choices.map((c: string, idx: number) => {\r\n                                    return html`<li key=${idx} onClick=${() => onSelect(c)}>{c}</li>`\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    `\r\n}\r\n\r\n\r\nexport default HoverSelect","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect'\r\nimport './snippet.css'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const callback1 = (c: string) => {\r\n        dispatch({type: \"setLanguage1\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callback2 = (c: string) => {\r\n        dispatch({type: \"setLanguage2\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callbackTaskGroup = (c: string) => {\r\n        dispatch({type: \"setTaskGroup\", payload: {newValue: c}})\r\n    }\r\n\r\n    return (html `\r\n        <nav>\r\n            <div class=\"headerContainer\">\r\n                <div class=\"choiceInput headerLeftmost\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\r\n                    <${HoverSelect} choices=${[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\r\n                        selectCallback=${callbackTaskGroup}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\r\n                        selectCallback=${callback1}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \r\n                        selectCallback=${callback2}><//>\r\n                    \r\n                </div>\r\n                <div class=\"choiceInputButton\">\r\n                    ↩ Previous\r\n                </div>\r\n                <div class=\"choiceInputButton headerRightmost\">\r\n                    ↪ Next\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        `\r\n      );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport \"./snippet.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props = {\r\n    numberProposals: number,\r\n}\r\nfunction TextInput({numberProposals, } : Props) {\r\n    return html`\r\n        <div>\r\n            <p>Propose a snippet ${numberProposals > 0 ? html`${numberProposals} proposals already awaiting premoderation` : \"\"}:</p>\r\n            <p><textarea class=\"snippetTextArea\"></textarea></p>\r\n            <p><button class=\"snippetButton\">Save</button></p>\r\n        </div>\r\n    ` \r\n      \r\n}\r\n\r\nexport default TextInput","import './snippet.css'\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props = {\r\n    content: string,\r\n    isRight: boolean,\r\n}\r\n\r\nfunction SnippetCode({content, isRight, } : Props) {\r\n    const snippetContent = html`\r\n        <pre class=\"snippetCode\">\r\n            {content}\r\n        </pre>\r\n        `\r\n    return html`\r\n        ${isRight \r\n            ? html`<div class=\"snippetContentContainer\">\r\n                    <div class=\"snippetButtons\">\r\n                        <div class=\"commentButton\" title=\"Alternative versions\">A</div>\r\n                        <div class=\"commentButton\" title=\"Copy text\">C</div>\r\n                    </div>\r\n                    ${snippetContent}\r\n                </div>\r\n            `\r\n            : html`<div class=\"snippetContentContainer\">\r\n                    ${snippetContent}\r\n                    <div class=\"snippetButtons snippetButtonsRight\">\r\n                        <div class=\"commentButton\" title=\"Alternative versions\">A</div>\r\n                        <div class=\"commentButton\" title=\"Copy text\">C</div>\r\n                    </div>\r\n                </div>\r\n            `\r\n        }\r\n    `\r\n}\r\n\r\nexport default SnippetCode","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\n\n\nconst axiosConfig: AxiosRequestConfig = {\n    baseURL: \"http://localhost:40100/api/v1/\",\n    timeout: 10000,\n    //headers: {'X-Custom-Header': 'foobar'},\n}\n\nconst createClient = (): AxiosInstance => axios.create(axiosConfig)\nexport default createClient","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport { SVState } from '../../redux/state';\r\nimport Snippet from '../../types/snippet';\r\nimport Header from './header'\r\nimport TextInput from \"./textInput\"\r\nimport './snippet.css'\r\nimport SnippetCode from './snippetCode';\r\nimport ENDPOINTS from '../../url';\r\nimport createClient from '../../client';\r\nimport { AxiosInstance } from 'axios';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nfunction SnippetPg() {\r\n    console.log(\"SnippetPg\")\r\n    const lang1 = useSelector((state: SVState) => state.language1)\r\n    const lang2 = useSelector((state: SVState) => state.language2)\r\n    const taskGroup = useSelector((state: SVState) => state.taskGroup)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, taskGroup])\r\n\r\n\r\n\r\n    return html`<div class=\"snippetsBody\">\r\n        <${Header} />\r\n        <main class=\"snippetsContainer\">\r\n            <div class=\"snippetsHeader\">\r\n                <div class=\"snippetLeftHeader\">${lang1}</div>\r\n                <div class=\"taskForHeader\">${taskGroup}</div>\r\n                <div class=\"snippetRightHeader\">${lang2}</div>\r\n            </div>\r\n            ${snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return html`\r\n                    <div class=\"snippetRow\" key=${idx}>\r\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\r\n                            ${snippet.leftCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                        <div class=${\"taskContainer\" + evenClass}>\r\n                            ${snippet.taskName}\r\n                        </div>\r\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\r\n                            ${snippet.rightCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                    </div>`\r\n            })}\r\n            <div style=\"margin-bottom: 20px; background-color: #303030'\">&nbsp;</div>\r\n        </main>\r\n    </div>\r\n    `\r\n}\r\n\r\nexport default SnippetPg","import { useState } from \"react\"\r\nimport HasName from \"../../interfaces/hasName\"\r\nimport StringKeyed from \"../../interfaces/stringKeyed\"\r\nimport \"./editableList.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props<T extends StringKeyed & HasName> = {\r\n    values: T[],\r\n    title: string,\r\n}\r\n\r\nconst EditableList = <T extends StringKeyed & HasName>({values, title, }: Props<T>) => {\r\n    const [openIdx, setOpenIdx] = useState(-1)\r\n    const rowClickHandler = (idx: number) => {\r\n        if (idx === openIdx) {\r\n            setOpenIdx(-1)\r\n        } else {\r\n            setOpenIdx(idx)\r\n        }\r\n    }\r\n\r\n    return html`\r\n        <div class=\"editableListContainer\">\r\n            <div class=\"editableListHeader\">\r\n                <div class=\"editableListTitle\"><h5>${title}</h5></div>\r\n                <div class=\"editableListHeaderButton\">+</div>\r\n            </div>\r\n            \r\n            <ul>\r\n                ${values.map((v: T, idx: number) => {\r\n                    return html`\r\n                        <li key=${idx} class=\"editableListRow\">\r\n                            <div onClick=${() => rowClickHandler(idx)} class=${(openIdx === idx ? \" editableListRowActive\" : \"\")}>\r\n                                <span class=\"editableListCell\">${v.name}</span>\r\n                            </div>\r\n                            ${openIdx === idx && html`\r\n                                <ul>\r\n                                    ${Object.keys(v).map((k: string, idxKey: number) => {\r\n                                        return html`\r\n                                            <li key=${idxKey} class=\"editableListEdit\">\r\n                                                <span><label>${k}</label></span>\r\n                                                <span><input type=\"text\" defaultValue=${v[k]} onFocus=${(event:any) => event.target.select()} />\r\n                                                </span>\r\n                                                <span><button>Save</button></span>                                            \r\n                                            </li>`\r\n                                    })}\r\n                                </ul>\r\n                            `}\r\n                        </li>\r\n                    `}\r\n                )}\r\n            </ul>\r\n        </div>\r\n    `\r\n}\r\n\r\n\r\nexport default EditableList","import Toggler from '../../commonComponents/toggler/toggler';\r\nimport HeaderRightButton from '../../commonComponents/headerRightButton/headerRightButton';\r\nimport Snippet from '../../types/snippet';\r\nimport \"../snippet/snippet.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst mockAlternatives: Snippet[] = [\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 1, taskName: \"Replace substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"    if (it is FileInfo) {\\n\"\r\n            + \"        fNames[i, 0] = it.Name;\\n\"\r\n            + \"        fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"        fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"    }\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 2, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 3, taskName: \"Index of first occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"int index = str.LastIndexOf(\\\"bz\\\");\", leftId: 1,\r\n        rightCode: \"\", rightId: 2, \r\n        taskId: 4, taskName: \"Index of last occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 5, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 6, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 7, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 8, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 9, taskName: \"Get last modified times\", \r\n    },\r\n]\r\n\r\nfunction Alternative() {\r\n    return html`\r\n        <div class=\"adminAlternative\">\r\n            \r\n            <div class=\"snippetsContainer\">\r\n                <div class=\"snippetsHeader\">\r\n                    <div class=\"snippetLeftHeader\">\r\n                        Alternatives\r\n                    </div>\r\n                    <div class=\"taskForHeader\"><Toggler leftChoice=\"Old->new\" rightChoice=\"Highest votes first\" initChosen={false}>\r\n                                </Toggler></div>\r\n                    <div class=\"snippetRightHeader\">\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n                ${mockAlternatives.map((snippet: Snippet, idx: number ) => {\r\n                    const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                    return html`\r\n                        <div class=\"snippetContainer\" key={idx}>\r\n                            <div class=${\"snippet leftSide\" + evenClass}>${snippet.leftCode}</div>\r\n                            <div class=${\"taskContainer\" + evenClass}>\r\n                                <div class=\"taskLeft\">\r\n                                </div>\r\n                                <div class=\"task\">${snippet.taskName}</div>\r\n                                <div class=\"taskRight commentButton\" title=\"Promote to main version\">\r\n                                    P\r\n                                </div>\r\n                            </div>\r\n                            <div class=${\"snippet rightSide\" + evenClass}>${snippet.rightCode}</div>\r\n                        </div>\r\n                        `\r\n                })}\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Alternative","import { useState } from \"react\"\r\nimport \"./toggler.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props = {\r\n    leftChoice: string,\r\n    rightChoice: string,\r\n    initChosen: boolean,\r\n}\r\n\r\nconst Toggler: React.FunctionComponent<Props> = ({leftChoice, rightChoice, initChosen}) => {\r\n    const [currValue, setCurrValue] = useState(initChosen)\r\n\r\n    return html`\r\n        <div class=\"togglerContainer\" onClick=${() => setCurrValue(!currValue)}>\r\n            <span class=${\"togglerLeftRect \" + (currValue ? \"togglerLeftRectInactive\" : \"togglerLeftRectActive\")}></span>\r\n            <span class=${\"togglerChoice\" + (currValue ? \" inactiveChoice\" : \" activeChoiceLeft\")}>\r\n                ${leftChoice}\r\n            </span>\r\n            <span class=${\"toggleSwitch \" + (currValue ? \"on\" : \"off\")}>\r\n                <div ></div>\r\n            </span>\r\n\r\n            <span class=${\"togglerChoice\" + (currValue ? \" activeChoiceRight\" : \" inactiveChoice\")}>\r\n                ${rightChoice}\r\n            </span>\r\n            <span class=${\"togglerRightRect \" + (currValue ? \" togglerRightRectActive\" : \"togglerRightRectInactive\")}></span>\r\n        </div>\r\n    `\r\n}\r\n\r\n\r\nexport default Toggler","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport EditableList from '../../commonComponents/editableList/editableList';\r\nimport HeaderRightButton from '../../commonComponents/headerRightButton/headerRightButton';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport Proposal from '../../types/proposal';\r\nimport \"../snippet/snippet.css\"\r\nimport \"./admin.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst mockProposals: Proposal[] = [\r\n]\r\n\r\nfunction NewProposal() {\r\n    return html`\r\n        <div class=\"newProposal\">\r\n            <div class=\"snippetsContainer\">\r\n                <div class=\"snippetsHeader\">\r\n                    <div class=\"snippetLeftHeader\">&nbsp;</div>\r\n                    <div class=\"taskForHeader\">\r\n                        <${Toggler} leftChoice=\"Old->new\" rightChoice=\"New->old\" initChosen=\"false\" />\r\n                    </div>\r\n                    <div class=\"snippetRightHeader\">\r\n                        New Proposals\r\n                    </div>\r\n                </div>\r\n                ${mockProposals.map((snippet: Proposal, idx: number ) => {\r\n                    const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                    return html`\r\n                        <div class=\"snippetContainer\" key=${idx}>\r\n                            <div class=${\"snippet leftSide\" + evenClass} >{}</div>\r\n                            <div class=${\"taskContainer\" + evenClass}>\r\n                                <div class=\"taskLeft\">\r\n                                </div>\r\n                                <div class=\"task\">\r\n                                    <span>${snippet.TaskName}</span> <span>${snippet.TSUpload.toString()}</span></div>\r\n                                <div class=\"taskRight commentButton\" title=\"Accept\">\r\n                                    A\r\n                                </div>\r\n                            </div>\r\n                            <div class=${\"snippet rightSide\" + evenClass}>${snippet.ProposalCode}</div>\r\n                        </div>`\r\n                })}\r\n                \r\n            </div>\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default NewProposal","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport EditableList from '../../commonComponents/editableList/editableList';\r\nimport PATHS from '../../path';\r\nimport Language from '../../types/language';\r\nimport TaskGroup from '../../types/taskGroup';\r\nimport Alternative from './alternative';\r\nimport NewProposal from './newProposal';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst groups: TaskGroup[] = [\r\n    {id: 1, name: \"String manipulation\"},\r\n    {id: 2, name: \"File system tasks\"},\r\n    {id: 3, name: \"Common types & operations on them\"},\r\n]\r\n\r\nconst langs: Language[] = [\r\n    {id: 1, name: \"C#\", languageGroup: \"Universal\", },\r\n    {id: 2, name: \"C++\", languageGroup: \"Universal\", },\r\n    {id: 3, name: \"Typescript\", languageGroup: \"Universal\", },\r\n]\r\nconst ListTaskGroups = (props: any) => EditableList<TaskGroup>(props)\r\nconst ListLanguages = (props: any) => EditableList<Language>(props)\r\n\r\nfunction Admin() {\r\n    return html`\r\n        <div style=\"overflow: scroll; background-color: #303030;\">\r\n            <p>\r\n                <${NavLink} to=${PATHS[\"snippet\"].url}>\r\n                    <div class=\"adminHeader\">Back to snippets</div>\r\n                <//>\r\n            </p>\r\n            <${ListTaskGroups} values=${groups} title=\"Task groups\"></EditableList>\r\n            <${ListLanguages} values=${langs} title=\"Languages\"></EditableList>\r\n            <div>\r\n                <${Alternative} />\r\n            </div>\r\n            <div>\r\n                <${NewProposal} />\r\n            </div>\r\n            \r\n            \r\n\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Admin","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PATHS from '../../path'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nfunction Group() {\r\n    return html`\r\n        <div>Hello world group\r\n            <p>\r\n                <${NavLink} to=${PATHS[\"admin\"].url}>\r\n                    <div class=\"adminHeader\">Back to admin</div>\r\n                <//>\r\n            </p>\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Group","import React from \"react\"\r\nimport  { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport PATHS from \"./path\"\r\nimport SnippetPg from \"./components/snippet/snippetPg\"\r\nimport Admin from \"./components/admin/admin\"\r\nimport Group from \"./components/group/group\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst Content: React.FunctionComponent = () => {\r\n    console.log(\"Content render\")\r\n    return html`\r\n    <${BrowserRouter}>\r\n        <div style=\"background-color: #303030; scrollbar-width: thin;\">\r\n            <${Switch}>\r\n                <${Route} exact=${true} path=${PATHS[\"snippet\"].url}>\r\n                    <${SnippetPg} />\r\n                <//>\r\n                <${Route} exact=${true} path=${PATHS[\"group\"].url}>\r\n                    <${Group} />\r\n                <//>\r\n                <${Route} exact=${true} path=${PATHS[\"admin\"].url}>\r\n                    <${Admin} />\r\n                <//>\r\n            <//>\r\n        </div>\r\n    <//>\r\n    `\r\n}\r\n\r\nexport default Content","import { Reducer } from \"redux\";\r\nimport { INIT_STATE, SVState } from \"./state\"\r\n\r\n\r\ntype ReduxAction = \r\n    | {type: \"login\", payload: {userName: string, pw: string}}\r\n    | {type: \"logout\", payload: {}}\r\n    | {type: \"changeSelect\", payload: {selectName: string}}\r\n    | {type: \"setLanguage1\", payload: {newValue: string}}\r\n    | {type: \"setLanguage2\", payload: {newValue: string}}\r\n    | {type: \"setTaskGroup\", payload: {newValue: string}}\r\n\r\n\r\nconst reducer: Reducer<SVState, ReduxAction> = (state: SVState = INIT_STATE, action: ReduxAction): SVState => {\r\n    switch(action.type) {\r\n        case \"login\":\r\n            return state;\r\n        case \"logout\":\r\n            return state;\r\n        case \"changeSelect\": {\r\n            return {...state, openSelect: action.payload.selectName, }\r\n        }\r\n        case \"setLanguage1\": {\r\n            return {...state, language1: action.payload.newValue, }\r\n        }\r\n        case \"setLanguage2\": {\r\n            return {...state, language2: action.payload.newValue, }\r\n        }\r\n        case \"setTaskGroup\": {\r\n            return {...state, taskGroup: action.payload.newValue, }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nexport type SVState = {\r\n    openSelect: string,\r\n    language1: string,\r\n    language2: string,\r\n    taskGroup: string,\r\n}\r\n\r\nexport const INIT_STATE: SVState = {\r\n    openSelect: \"\",\r\n    language1: \"\",\r\n    language2: \"\",\r\n    taskGroup: \"\",\r\n}\r\n\r\nconst globalState = createStore<SVState, any, any, any>(reducer)\r\n\r\nexport default globalState;","import React from 'react'\nimport logo from './logo.svg'\nimport './app.css'\nimport ReactDOM from 'react-dom'\nimport Content from './content'\nimport { Provider } from 'react-redux'\nimport globalState from './redux/state'\nimport { html } from 'htm/react'\n\n\nconst App: React.FunctionComponent = () => {\n    console.log(\"App\")\n    return html`\n        <${Provider} store=${globalState}>\n            <${Content} />\n        <//>\n    `\n}\n\nReactDOM.render(\n    html`<div style=\"color: red;\">asg<//>`,\n    // html`<${React.StrictMode}>\n    //   <${App} />\n    // <//>`,    \n    document.getElementById(\"snippetRoot\")\n)\n"]}}