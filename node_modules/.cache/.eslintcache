[{"/Users/zrx/Projects/SnippetVault.WEB/src/app.tsx":"1","/Users/zrx/Projects/SnippetVault.WEB/src/redux/state.ts":"2","/Users/zrx/Projects/SnippetVault.WEB/src/content.tsx":"3","/Users/zrx/Projects/SnippetVault.WEB/src/redux/reducer.ts":"4","/Users/zrx/Projects/SnippetVault.WEB/src/path.ts":"5","/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/snippetPg.tsx":"6","/Users/zrx/Projects/SnippetVault.WEB/src/components/group/group.tsx":"7","/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/admin.tsx":"8","/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/textInput.tsx":"9","/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/header.tsx":"10","/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/snippetCode.tsx":"11","/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/alternative.tsx":"12","/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/newProposal.tsx":"13","/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/editableList/editableList.tsx":"14","/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/hoverSelect/hoverSelect.tsx":"15","/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/toggler/toggler.tsx":"16","/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/state.ts":"17","/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/reducer.ts":"18","/Users/zrx/Projects/SnippetVault/src/frontend/src/path.ts":"19","/Users/zrx/Projects/SnippetVault/src/frontend/src/client.ts":"20","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/textInput.ts":"21","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/header.ts":"22","/Users/zrx/Projects/SnippetVault/src/frontend/src/app.ts":"23","/Users/zrx/Projects/SnippetVault/src/frontend/src/content.ts":"24","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/admin.ts":"25","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/group/group.ts":"26","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts":"27","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetCode.ts":"28","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/alternative.ts":"29","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/newProposal.ts":"30","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.ts":"31","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/toggler/toggler.ts":"32","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.ts":"33"},{"size":487,"mtime":1629656646000,"results":"34","hashOfConfig":"35"},{"size":422,"mtime":1629670074000,"results":"36","hashOfConfig":"35"},{"size":912,"mtime":1630823386000,"results":"37","hashOfConfig":"35"},{"size":1194,"mtime":1630823514000,"results":"38","hashOfConfig":"35"},{"size":519,"mtime":1630822950000,"results":"39","hashOfConfig":"35"},{"size":6707,"mtime":1630868792705,"results":"40","hashOfConfig":"35"},{"size":378,"mtime":1629581160000,"results":"41","hashOfConfig":"35"},{"size":1411,"mtime":1630785704000,"results":"42","hashOfConfig":"35"},{"size":475,"mtime":1630351204000,"results":"43","hashOfConfig":"35"},{"size":2215,"mtime":1630823514000,"results":"44","hashOfConfig":"35"},{"size":1121,"mtime":1630868980370,"results":"45","hashOfConfig":"35"},{"size":6308,"mtime":1630868980370,"results":"46","hashOfConfig":"35"},{"size":3219,"mtime":1630868980370,"results":"47","hashOfConfig":"35"},{"size":2232,"mtime":1629703226000,"results":"48","hashOfConfig":"35"},{"size":2135,"mtime":1629702396000,"results":"49","hashOfConfig":"35"},{"size":1266,"mtime":1630348554000,"results":"50","hashOfConfig":"35"},{"size":422,"mtime":1629670074000,"results":"51","hashOfConfig":"52"},{"size":1194,"mtime":1630823514000,"results":"53","hashOfConfig":"52"},{"size":519,"mtime":1630822950000,"results":"54","hashOfConfig":"52"},{"size":320,"mtime":1632948104609,"results":"55","hashOfConfig":"52"},{"size":548,"mtime":1633853532340,"results":"56","hashOfConfig":"52"},{"size":2085,"mtime":1633852435020,"results":"57","hashOfConfig":"52"},{"size":532,"mtime":1633853722868,"results":"58","hashOfConfig":"52"},{"size":986,"mtime":1633853714252,"results":"59","hashOfConfig":"52"},{"size":1609,"mtime":1633854125390,"results":"60","hashOfConfig":"52"},{"size":437,"mtime":1633853309254,"results":"61","hashOfConfig":"52"},{"size":3031,"mtime":1633853496619,"results":"62","hashOfConfig":"52"},{"size":1150,"mtime":1633852689375,"results":"63","hashOfConfig":"52"},{"size":6397,"mtime":1633853116293,"results":"64","hashOfConfig":"52"},{"size":2172,"mtime":1633854544730,"results":"65","hashOfConfig":"52"},{"size":2365,"mtime":1633854571182,"results":"66","hashOfConfig":"52"},{"size":1187,"mtime":1633854472136,"results":"67","hashOfConfig":"52"},{"size":2155,"mtime":1633854423154,"results":"68","hashOfConfig":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"1u9r9rj",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1y9k81t",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"107"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"/Users/zrx/Projects/SnippetVault.WEB/src/app.tsx",["148"],"import React from 'react'\nimport logo from './logo.svg'\nimport './app.css'\nimport ReactDOM from 'react-dom'\nimport Content from './content'\nimport { Provider } from 'react-redux'\nimport globalState from './redux/state'\n\n\nconst App: React.FunctionComponent = () => {\n    return (<Provider store={globalState}>\n        <Content />\n        </Provider>\n    );\n}\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"snippetRoot\")\n  );\n",["149","150"],"/Users/zrx/Projects/SnippetVault.WEB/src/redux/state.ts",[],"/Users/zrx/Projects/SnippetVault.WEB/src/content.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/redux/reducer.ts",[],"/Users/zrx/Projects/SnippetVault.WEB/src/path.ts",[],"/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/snippetPg.tsx",["151","152"],"/Users/zrx/Projects/SnippetVault.WEB/src/components/group/group.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/admin.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/textInput.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/header.tsx",["153","154","155","156"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect'\r\nimport PATHS from '../../path';\r\nimport { SVState } from '../../redux/state';\r\nimport './snippet.css'\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const callback1 = (c: string) => {\r\n        dispatch({type: \"setLanguage1\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callback2 = (c: string) => {\r\n        dispatch({type: \"setLanguage2\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callbackTaskGroup = (c: string) => {\r\n        dispatch({type: \"setTaskGroup\", payload: {newValue: c}})\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className=\"headerContainer\">\r\n                <div className=\"choiceInput headerLeftmost\">\r\n                    <div style={{height: \"2rem\", margin: \"0\", padding: \"0\"}}><label >Task group:</label></div>\r\n                    <HoverSelect choices={[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\r\n                        selectCallback={callbackTaskGroup}></HoverSelect>\r\n                </div>\r\n                <div className=\"choiceInput\">\r\n                    <div style={{height: \"2rem\", margin: \"0\", padding: \"0\"}}><label >Language 1:</label></div>\r\n                    <HoverSelect choices={[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\r\n                        selectCallback={callback1}></HoverSelect>\r\n                </div>\r\n                <div className=\"choiceInput\">\r\n                    <div style={{height: \"2rem\", margin: \"0\", padding: \"0\"}}><label >Language 2:</label></div>\r\n                    <HoverSelect choices={[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \r\n                        selectCallback={callback2}></HoverSelect>\r\n                    \r\n                </div>\r\n                <div className=\"choiceInputButton\">\r\n                    ↩ Previous\r\n                </div>\r\n                <div className=\"choiceInputButton headerRightmost\">\r\n                    ↪ Next\r\n                </div>\r\n            </div>\r\n        </nav>\r\n      );\r\n}\r\n\r\nexport default Header","/Users/zrx/Projects/SnippetVault.WEB/src/components/snippet/snippetCode.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/alternative.tsx",["157"],"/Users/zrx/Projects/SnippetVault.WEB/src/components/admin/newProposal.tsx",["158","159","160"],"/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/editableList/editableList.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/hoverSelect/hoverSelect.tsx",[],"/Users/zrx/Projects/SnippetVault.WEB/src/commonComponents/toggler/toggler.tsx",["161","162","163"],"import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { SVState } from \"../../redux/state\"\r\nimport \"./toggler.css\"\r\n\r\n\r\ntype Props = {\r\n    leftChoice: string,\r\n    rightChoice: string,\r\n    initChosen: boolean,\r\n}\r\n\r\nconst Toggler: React.FunctionComponent<Props> = ({leftChoice, rightChoice, initChosen}) => {\r\n    const [currValue, setCurrValue] = useState(initChosen)\r\n\r\n    return (\r\n        <div className=\"togglerContainer\" onClick={() => setCurrValue(!currValue)}>\r\n            <span className={\"togglerLeftRect \" + (currValue ? \"togglerLeftRectInactive\" : \"togglerLeftRectActive\")}></span>\r\n            <span className={\"togglerChoice\" + (currValue ? \" inactiveChoice\" : \" activeChoiceLeft\")}>\r\n                {leftChoice}\r\n            </span>\r\n            <span className={\"toggleSwitch \" + (currValue ? \"on\" : \"off\")}>\r\n                <div ></div>\r\n            </span>\r\n\r\n            <span className={\"togglerChoice\" + (currValue ? \" activeChoiceRight\" : \" inactiveChoice\")}>\r\n                {rightChoice}\r\n            </span>\r\n            <span className={\"togglerRightRect \" + (currValue ? \" togglerRightRectActive\" : \"togglerRightRectInactive\")}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Toggler","/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/state.ts",[],["164","165"],"/Users/zrx/Projects/SnippetVault/src/frontend/src/redux/reducer.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/path.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/client.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/textInput.ts",["166"],"import React from 'react'\r\nimport \"./snippet.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\ntype Props = {\r\n    numberProposals: number,\r\n}\r\nfunction TextInput({numberProposals, } : Props) {\r\n    return html`\r\n        <div>\r\n            <p>Propose a snippet ${numberProposals > 0 ? html`${numberProposals} proposals already awaiting premoderation` : \"\"}:</p>\r\n            <p><textarea class=\"snippetTextArea\"></textarea></p>\r\n            <p><button class=\"snippetButton\">Save</button></p>\r\n        </div>\r\n    ` \r\n      \r\n}\r\n\r\nexport default TextInput","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/header.ts",["167"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect'\r\nimport './snippet.css'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const callback1 = (c: string) => {\r\n        dispatch({type: \"setLanguage1\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callback2 = (c: string) => {\r\n        dispatch({type: \"setLanguage2\", payload: {newValue: c}})\r\n    }\r\n\r\n    const callbackTaskGroup = (c: string) => {\r\n        dispatch({type: \"setTaskGroup\", payload: {newValue: c}})\r\n    }\r\n\r\n    return (html `\r\n        <nav>\r\n            <div class=\"headerContainer\">\r\n                <div class=\"choiceInput headerLeftmost\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Task group:</label></div>\r\n                    <${HoverSelect} choices=${[\"strings\", \"file system\", \"spreadsheets\"]} uniqueName=\"TaskGroupChoice\"\r\n                        selectCallback=${callbackTaskGroup}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 1:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Swift\", \"Typescript\"]} uniqueName=\"Lang1\"\r\n                        selectCallback=${callback1}><//>\r\n                </div>\r\n                <div class=\"choiceInput\">\r\n                    <div style=\"height: 2rem; margin: 0; padding: 0;\"><label >Language 2:</label></div>\r\n                    <${HoverSelect} choices=${[\"C#\", \"Typescript\"]} uniqueName=\"Lang2\" \r\n                        selectCallback=${callback2}><//>\r\n                    \r\n                </div>\r\n                <div class=\"choiceInputButton\">\r\n                    ↩ Previous\r\n                </div>\r\n                <div class=\"choiceInputButton headerRightmost\">\r\n                    ↪ Next\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        `\r\n      );\r\n}\r\n\r\nexport default Header","/Users/zrx/Projects/SnippetVault/src/frontend/src/app.ts",["168"],"import React from 'react'\nimport logo from './logo.svg'\nimport './app.css'\nimport ReactDOM from 'react-dom'\nimport Content from './content'\nimport { Provider } from 'react-redux'\nimport globalState from './redux/state'\nimport { html } from 'htm/react'\n\n\nconst App: React.FunctionComponent = () => {\n    return html`\n        <${Provider} store=${globalState}>\n            <${Content} />\n        <//>\n    `\n}\n\nReactDOM.render(\n    html`<${React.StrictMode}>\n      <${App} />\n    <//>`,\n    document.getElementById(\"snippetRoot\")\n  );\n","/Users/zrx/Projects/SnippetVault/src/frontend/src/content.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/admin.ts",["169"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport EditableList from '../../commonComponents/editableList/editableList';\r\nimport PATHS from '../../path';\r\nimport Language from '../../types/language';\r\nimport TaskGroup from '../../types/taskGroup';\r\nimport Alternative from './alternative';\r\nimport NewProposal from './newProposal';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst groups: TaskGroup[] = [\r\n    {id: 1, name: \"String manipulation\"},\r\n    {id: 2, name: \"File system tasks\"},\r\n    {id: 3, name: \"Common types & operations on them\"},\r\n]\r\n\r\nconst langs: Language[] = [\r\n    {id: 1, name: \"C#\", languageGroup: \"Universal\", },\r\n    {id: 2, name: \"C++\", languageGroup: \"Universal\", },\r\n    {id: 3, name: \"Typescript\", languageGroup: \"Universal\", },\r\n]\r\nconst ListTaskGroups = (props: any) => EditableList<TaskGroup>(props)\r\nconst ListLanguages = (props: any) => EditableList<Language>(props)\r\n\r\nfunction Admin() {\r\n    return html`\r\n        <div style=\"overflow: scroll; backgroundColor: #303030;\">\r\n            <p>\r\n                <${NavLink} to=${PATHS[\"snippet\"].url}>\r\n                    <div class=\"adminHeader\">Back to snippets</div>\r\n                <//>\r\n            </p>\r\n            <${ListTaskGroups} values=${groups} title=\"Task groups\"></EditableList>\r\n            <${ListLanguages} values=${langs} title=\"Languages\"></EditableList>\r\n            <div>\r\n                <${Alternative} />\r\n            </div>\r\n            <div>\r\n                <${NewProposal} />\r\n            </div>\r\n            \r\n            \r\n\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Admin","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/group/group.ts",["170"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PATHS from '../../path'\r\nimport { html } from 'htm/react'\r\n\r\n\r\nfunction Group() {\r\n    return html`\r\n        <div>Hello world group\r\n            <p>\r\n                <${NavLink} to=${PATHS[\"admin\"].url}>\r\n                    <div class=\"adminHeader\">Back to admin</div>\r\n                <//>\r\n            </p>\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Group","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetPg.ts",["171","172","173","174","175"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport HoverSelect from '../../commonComponents/hoverSelect/hoverSelect';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport { SVState } from '../../redux/state';\r\nimport Snippet from '../../types/snippet';\r\nimport Header from './header'\r\nimport TextInput from \"./textInput\"\r\nimport './snippet.css'\r\nimport SnippetCode from './snippetCode';\r\nimport ENDPOINTS from '../../url';\r\nimport createClient from '../../client';\r\nimport { AxiosInstance } from 'axios';\r\nimport { html } from 'htm/react'\r\n\r\n\r\nfunction SnippetPg() {\r\n    const lang1 = useSelector((state: SVState) => state.language1)\r\n    const lang2 = useSelector((state: SVState) => state.language2)\r\n    const taskGroup = useSelector((state: SVState) => state.taskGroup)\r\n    const [snippets, setSnippets] = useState<Snippet[]>([])\r\n    const client: AxiosInstance = createClient()\r\n    useEffect(() => {\r\n        client.get(`{ENDPOINTS.get.snippet}${lang1}/${lang2}/${taskGroup}`)\r\n        .then((r: any) => {\r\n            console.log(\"Response\")\r\n            console.dir(r)\r\n            if (r.data) {\r\n                setSnippets(r.data)\r\n            }\r\n        }).catch((e: any) => {\r\n            console.log(\"Error\")\r\n            console.dir(e)\r\n        })\r\n    }, [lang1, lang2, taskGroup])\r\n\r\n\r\n\r\n    return html`<div class=\"snippetsBody\">\r\n        <${Header} />\r\n        <main class=\"snippetsContainer\">\r\n            <div class=\"snippetsHeader\">\r\n                <div class=\"snippetLeftHeader\">${lang1}</div>\r\n                <div class=\"taskForHeader\">${taskGroup}</div>\r\n                <div class=\"snippetRightHeader\">${lang2}</div>\r\n            </div>\r\n            ${snippets && snippets.map((snippet: Snippet, idx: number ) => {\r\n                const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                return html`\r\n                    <div class=\"snippetRow\" key=${idx}>\r\n                        <div class=${\"snippetContent leftSide\" + evenClass}>\r\n                            ${snippet.leftCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.leftCode} isRight=\"false\"><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                        <div class=${\"taskContainer\" + evenClass}>\r\n                            ${snippet.taskName}\r\n                        </div>\r\n                        <div class=${\"snippetContent rightSide\" + evenClass}>\r\n                            ${snippet.rightCode.length > 0 \r\n                                ? html`<${SnippetCode} content=${snippet.rightCode} isRight={true}><//>`\r\n                                : html`<${TextInput} numberProposals=\"4\"><//>`}\r\n                        </div>\r\n                    </div>`\r\n            })}\r\n            <div style=\"marginBottom: 20px; backgroundColor: #303030'\">&nbsp;</div>\r\n        </main>\r\n    </div>\r\n    `\r\n}\r\n\r\nexport default SnippetPg","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/snippet/snippetCode.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/alternative.ts",["176","177"],"import Toggler from '../../commonComponents/toggler/toggler';\r\nimport HeaderRightButton from '../../commonComponents/headerRightButton/headerRightButton';\r\nimport Snippet from '../../types/snippet';\r\nimport \"../snippet/snippet.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst mockAlternatives: Snippet[] = [\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 1, taskName: \"Replace substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"    if (it is FileInfo) {\\n\"\r\n            + \"        fNames[i, 0] = it.Name;\\n\"\r\n            + \"        fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"        fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"    }\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 2, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"str3 = str1.replace(str2, \\\"bcjk\\\");\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 3, taskName: \"Index of first occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"int index = str.LastIndexOf(\\\"bz\\\");\", leftId: 1,\r\n        rightCode: \"\", rightId: 2, \r\n        taskId: 4, taskName: \"Index of last occurrence of substring\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 5, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 6, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 7, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 8, taskName: \"Get last modified times\", \r\n    },\r\n    {\r\n        leftCode: \"DirectoryInfo dirInfo = new DirectoryInfo(thePath);\\n\"\r\n            + \"fInfos = dirInfo.GetFileSystemInfos(\\\"*.CSV\\\");\\n\"\r\n            + \"foreach (FileSystemInfo it in fInfos) {\\n\"\r\n            + \"if (it is FileInfo) {\\n\"\r\n            + \"fNames[i, 0] = it.Name;\\n\"\r\n            + \"fNames[i, 1] = dirInfo.FullName;\\n\"\r\n            + \"fDates[i, 0] = it.LastWriteTime;\\n\"\r\n            + \"}\\n\"\r\n            + \"}\", leftId: 1,\r\n        rightCode: \"str3 = str1.replacingOccurrences(of: str2, with: \\\"bcjk\\\")\", rightId: 2, \r\n        taskId: 9, taskName: \"Get last modified times\", \r\n    },\r\n]\r\n\r\nfunction Alternative() {\r\n    return html`\r\n        <div class=\"adminAlternative\">\r\n            \r\n            <div class=\"snippetsContainer\">\r\n                <div class=\"snippetsHeader\">\r\n                    <div class=\"snippetLeftHeader\">\r\n                        Alternatives\r\n                    </div>\r\n                    <div class=\"taskForHeader\"><Toggler leftChoice=\"Old->new\" rightChoice=\"Highest votes first\" initChosen={false}>\r\n                                </Toggler></div>\r\n                    <div class=\"snippetRightHeader\">\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n                ${mockAlternatives.map((snippet: Snippet, idx: number ) => {\r\n                    const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                    return html`\r\n                        <div class=\"snippetContainer\" key={idx}>\r\n                            <div class=${\"snippet leftSide\" + evenClass}>${snippet.leftCode}</div>\r\n                            <div class=${\"taskContainer\" + evenClass}>\r\n                                <div class=\"taskLeft\">\r\n                                </div>\r\n                                <div class=\"task\">${snippet.taskName}</div>\r\n                                <div class=\"taskRight commentButton\" title=\"Promote to main version\">\r\n                                    P\r\n                                </div>\r\n                            </div>\r\n                            <div class=${\"snippet rightSide\" + evenClass}>${snippet.rightCode}</div>\r\n                        </div>\r\n                        `\r\n                })}\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default Alternative","/Users/zrx/Projects/SnippetVault/src/frontend/src/components/admin/newProposal.ts",["178","179","180","181"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport EditableList from '../../commonComponents/editableList/editableList';\r\nimport HeaderRightButton from '../../commonComponents/headerRightButton/headerRightButton';\r\nimport Toggler from '../../commonComponents/toggler/toggler';\r\nimport Proposal from '../../types/proposal';\r\nimport \"../snippet/snippet.css\"\r\nimport \"./admin.css\"\r\nimport { html } from 'htm/react'\r\n\r\n\r\nconst mockProposals: Proposal[] = [\r\n]\r\n\r\nfunction NewProposal() {\r\n    return html`\r\n        <div class=\"newProposal\">\r\n            <div class=\"snippetsContainer\">\r\n                <div class=\"snippetsHeader\">\r\n                    <div class=\"snippetLeftHeader\">&nbsp;</div>\r\n                    <div class=\"taskForHeader\">\r\n                        <${Toggler} leftChoice=\"Old->new\" rightChoice=\"New->old\" initChosen=\"false\" />\r\n                    </div>\r\n                    <div class=\"snippetRightHeader\">\r\n                        New Proposals\r\n                    </div>\r\n                </div>\r\n                ${mockProposals.map((snippet: Proposal, idx: number ) => {\r\n                    const evenClass = (idx%2 === 0 ? \" evenRow\" : \"\")\r\n                    return html`\r\n                        <div class=\"snippetContainer\" key=${idx}>\r\n                            <div class=${\"snippet leftSide\" + evenClass} >{}</div>\r\n                            <div class=${\"taskContainer\" + evenClass}>\r\n                                <div class=\"taskLeft\">\r\n                                </div>\r\n                                <div class=\"task\">\r\n                                    <span>${snippet.TaskName}</span> <span>${snippet.TSUpload.toString()}</span></div>\r\n                                <div class=\"taskRight commentButton\" title=\"Accept\">\r\n                                    A\r\n                                </div>\r\n                            </div>\r\n                            <div class=${\"snippet rightSide\" + evenClass}>${snippet.ProposalCode}</div>\r\n                        </div>`\r\n                })}\r\n                \r\n            </div>\r\n        </div>\r\n    `\r\n}\r\n\r\nexport default NewProposal","/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/editableList/editableList.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/toggler/toggler.ts",[],"/Users/zrx/Projects/SnippetVault/src/frontend/src/commonComponents/hoverSelect/hoverSelect.ts",[],{"ruleId":"182","severity":1,"message":"183","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":12},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"182","severity":1,"message":"190","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":19},{"ruleId":"182","severity":1,"message":"191","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":15},{"ruleId":"182","severity":1,"message":"192","line":2,"column":23,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"193","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":17},{"ruleId":"182","severity":1,"message":"194","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"195","line":6,"column":10,"nodeType":"184","messageId":"185","endLine":6,"endColumn":17},{"ruleId":"182","severity":1,"message":"196","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"193","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":20},{"ruleId":"182","severity":1,"message":"196","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":25},{"ruleId":"182","severity":1,"message":"198","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":21},{"ruleId":"182","severity":1,"message":"192","line":2,"column":23,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"195","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":17},{"ruleId":"186","replacedBy":"199"},{"ruleId":"188","replacedBy":"200"},{"ruleId":"182","severity":1,"message":"201","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"192","line":2,"column":23,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":12},{"ruleId":"182","severity":1,"message":"201","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"201","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"201","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"190","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":19},{"ruleId":"182","severity":1,"message":"191","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":15},{"ruleId":"182","severity":1,"message":"202","line":11,"column":8,"nodeType":"184","messageId":"185","endLine":11,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":35,"column":8,"nodeType":"205","endLine":35,"endColumn":33,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"191","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":15},{"ruleId":"182","severity":1,"message":"196","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"201","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"193","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":20},{"ruleId":"182","severity":1,"message":"196","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":25},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'HoverSelect' is defined but never used.","'Toggler' is defined but never used.","'useSelector' is defined but never used.","'NavLink' is defined but never used.","'PATHS' is defined but never used.","'SVState' is defined but never used.","'HeaderRightButton' is defined but never used.","'EditableList' is defined but never used.","'useDispatch' is defined but never used.",["207"],["208"],"'React' is defined but never used.","'ENDPOINTS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.","ArrayExpression",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},"Update the dependencies array to be: [client, lang1, lang2, taskGroup]",{"range":"212","text":"213"},[1343,1368],"[client, lang1, lang2, taskGroup]"]